html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Roboto;font-weight:400;font-style:normal;src:url(/public/fonts/Roboto-Regular.woff) format("woff"),url(/public/fonts/Roboto-Regular.woff2) format("woff2")}*{-webkit-tap-highlight-color:transparent}*,:after,:before{box-sizing:border-box}html{font-family:Roboto,sans-serif;font-size:100%;color:#121920;background-color:#fafafa}body{font-weight:400;text-rendering:optimizeLegibility}h1{margin-top:0;margin-bottom:0;font-size:30px;font-weight:500;line-height:130%;color:#121920}h1:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h1{font-size:36px}}h2{margin-top:0;margin-bottom:0;font-size:30px;font-weight:500;line-height:130%;color:#121920}h2:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h2{font-size:30px;line-height:120%}}h3{margin-top:0;margin-bottom:0;font-size:20px;font-weight:500;line-height:120%;color:#3c3c3c}h3:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h3{font-size:24px;line-height:130%}}p{margin-top:0;margin-bottom:0;font-size:14px;font-weight:400;line-height:167%}p:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){p{font-size:16px;line-height:167%}}ol{list-style:none;counter-reset:li;font-size:14px}ol:not([class]){padding-inline-start:20px}ol:first-child{margin-top:10px}ol li{line-height:1rem;counter-increment:li;margin-bottom:.625rem;padding-left:.625rem}ol li:before{content:counters(li,".") ".";margin-right:.625rem;color:#dc2c53;height:100%;width:1em}@media ((min-width:768px)){ol li{line-height:1.1875rem;font-size:16px}}ul{list-style:none;font-size:14px;margin-block-start:0;margin-block-end:0;padding-inline-start:0}ul:not([class]){padding-inline-start:20px}ul:not([class]) li{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;line-height:1rem;margin-bottom:.625rem}ul:not([class]) li:before{content:"";display:inline-block;width:.3125rem;height:.3125rem;margin-right:.625rem;border-radius:50%;background-color:#dc2c53}@media ((min-width:768px)){ul:not([class]) li{font-size:16px;line-height:1.1875rem}}blockquote{margin:0;padding:1.25rem 1.5625rem;border-radius:5px;border-left:5px solid #dc2c53;background-color:#fafafa;font-size:14px;font-weight:400;line-height:167%}@media ((min-width:768px)){blockquote{font-size:16px}}a:not([class]){text-decoration:none;font-weight:400;line-height:167%;color:#34aadd}a:not([class]):hover{text-decoration:underline}a:not([class]):visited{color:#a7ccdc}img{width:100%}.container{width:100%;max-width:80rem;margin-right:auto;margin-left:auto;padding-right:1.25rem;padding-left:1.25rem}.header{height:6.5625rem;background-color:#fff;box-shadow:0 3px 10px rgba(0,0,0,.05)}@media (min-width:768px){.header{height:5rem}}.header__row{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.header__col--logo{margin-right:3.125rem}@media (min-width:768px){.header__col--logo{margin-right:3.8125rem}}.header__col--search{position:absolute;top:4.0625rem;right:0;width:100%}@media (min-width:768px){.header__col--search{position:relative;top:0;margin-right:3.8125rem}}.header__col--profile{padding-top:1.25rem;padding-bottom:1.25rem;padding-left:1.1875rem}@media (min-width:768px){.header__col--profile{border-left:.0625rem solid #ebebf1}}.header__logo{width:8.4375rem;height:1.875rem}.footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;background-color:#fff;box-shadow:0 3px 10px rgba(0,0,0,.05)}@media (min-width:768px){.footer{height:6.375rem}}.footer__row{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.footer__row{-ms-flex-direction:row;flex-direction:row}}.footer__col--social{width:100%;padding:1.25rem 0;border-bottom:1px solid #bbc4d6}@media (min-width:768px){.footer__col--social{width:auto;padding-right:2.5rem;border-bottom:none}}@media (min-width:1440px){.footer__col--social{padding:0 2.5rem 0 0;margin:1.25rem 0;border-right:1px solid #bbc4d6}}.footer__col--docs{width:100%;padding:1.25rem 0;border-bottom:1px solid #bbc4d6}@media (min-width:768px){.footer__col--docs{border-bottom:none}}@media (min-width:1440px){.footer__col--docs{margin-left:2.5rem}}.footer__col--logo{padding:1.25rem 0}.page{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100vh}.page__header{position:fixed;z-index:100;top:0;right:0;left:0;-ms-flex-negative:0;flex-shrink:0}.page__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-positive:1;flex-grow:1;margin-top:6.5625rem;padding-top:2.5rem;padding-bottom:6.25rem}@media (min-width:768px){.page__content{margin-top:5rem;padding-top:3.125rem}}.page__footer{-ms-flex-negative:0;flex-shrink:0}.items{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.items{-ms-flex-direction:row;flex-direction:row;gap:2rem}}.items__sidebar{background-color:green}@media (min-width:768px){.items__sidebar{width:17.875rem}}.items__main{background-color:#ff0}@media (min-width:768px){.items__main{-ms-flex:auto;flex:auto}}.button{font-size:14px;line-height:120%;font-weight:500;position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:3.125rem;padding:0 1.25rem;cursor:pointer;text-decoration:none;color:#fff;border-radius:.3125rem;border:none;transition:color .2s linear;transition:background-color .2s linear}.button--medium{height:40px}.button--small{height:29px}.button--squared{border-radius:.3125rem 0 0 0}.button--color{color:#fff;background:#34aadd}.button--color:hover{background:#6680ae}.button--color:active{background:#6680ae;opacity:.5}.button--noColor{color:#34aadd;background:#fff}.button--noColor:hover{color:#6680ae}.button--noColor:active{color:#6680ae;opacity:.5}.button--simple{height:auto;color:#34aadd;padding:5px;background:transparent}.button--simple__text{padding:5px}.button--simple:hover{color:#6680ae}.button--simple:active{color:#6680ae;opacity:.5}.button--color.button--disabled{background:#ebebf1}.button--noColor.button--disabled{background:#fff}.button--disabled{color:#bbc4d6;cursor:default}.button--disabled:hover{color:none}.button--iconed.button--tabIcon{display:block;height:100%;width:100%;padding:0;color:#bbc4d6;background-color:transparent}.button--iconed.button--tabIcon .button__icon--tab{margin:0 auto;height:100%;width:100%;background-color:transparent}.button--iconed.button--tabIcon:hover{color:#768298;transition:color .2s linear;transition:background-color .2s linear}.button__text{font-weight:500;display:block;margin-right:.625rem;margin-left:.625rem}.button__icon{height:.625rem;width:.625rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.button__icon--medium{height:1rem;width:1rem}.button__icon--gray{color:#768298}.icon{display:block;width:100%;height:100%}.heading{margin-top:0;margin-bottom:0;color:#121920}.heading--huge{font-size:30px;font-weight:500;line-height:130%}@media ((min-width:768px)){.heading--huge{font-size:36px}}.heading--large{font-size:30px;font-weight:500;line-height:130%}@media ((min-width:768px)){.heading--large{font-size:30px;line-height:120%}}.heading--medium{font-size:20px;font-weight:500;line-height:120%;color:#3c3c3c}@media ((min-width:768px)){.heading--medium{font-size:24px;line-height:130%}}.input{position:relative}.input--textarea .input__control{-ms-overflow-style:none;scrollbar-width:none;line-height:160%;height:6.25rem;padding:1.0625rem 1.25rem;resize:none}.input--textarea .input__control::-webkit-scrollbar{width:0;background:transparent}.input--small .input__control{height:40px}.input--buttoned .input__control{padding-left:3.0625rem}@media (min-width:768px){.input--buttoned .input__control{padding-left:2.4375rem}}.input--search .input__button{position:absolute;top:50%;left:1.25rem;transform:translateY(-50%)}@media (min-width:768px){.input--search .input__button{left:.625rem}}.input--search .input__control,.input__control{border:.0625rem solid #ebebf1}.input__control{font-size:14px;line-height:160%;display:block;width:100%;height:3.125rem;padding:0 1.25rem;transition:color .2s linear;border-radius:.3125rem;background-color:#fff;box-shadow:none}.input__control:-ms-input-placeholder{opacity:1}.input__control::placeholder{font-size:14px;color:#bbc4d6;opacity:1}.input__control:-ms-input-placeholder{font-size:14px;color:#bbc4d6}.input__control::-ms-input-placeholder{font-size:14px;color:#bbc4d6}.input__control:focus{border-color:#768298;outline:none}.input__control:disabled{background-color:#ebebf1}.input__control--error{font-size:.625rem;border-color:#dc2c53;color:#dc2c53}.input__control--error:focus{border-color:#dc2c53}.input__control-error{line-height:160%;color:transparent}.logo--small{width:93.42px;height:18.1px}@media (min-width:1440px){.logo--small{width:135.04px;height:30.32px}}.profile{position:relative}.profile__block{display:none}@media (min-width:768px){.profile__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:right;justify-content:right}}.profile__icon{position:relative;display:block;width:1.5rem;height:1.5rem;fill:#34aadd}@media (min-width:768px){.profile__icon{display:none}}.profile__name{font-size:14px;line-height:120%;margin-right:.625rem;color:#768298}.profile__avatar{display:block;width:2.5rem;height:2.5rem}.profile__link{position:absolute;top:0;left:0;right:0;display:block;width:100%;height:100%}.social__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media (min-width:768px){.social__list{-ms-flex-pack:left;justify-content:left}}.social__item{margin-bottom:0;margin-right:1.4375rem}.social__item:last-child{margin-right:0}.social__icon>.social__icon-pic{fill:#bbc4d6}.social__icon>.social__icon-pic:hover{fill:#768298;transition:fill .3s linear}.social__icon-pic{width:2.5rem;height:2.5rem}.docs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.docs__list{-ms-flex-direction:row;flex-direction:row}}.docs__item{margin-bottom:1.25rem;color:#34aadd}.docs__item:last-child{margin-bottom:0}@media (min-width:768px){.docs__item{font-size:14px;margin-right:1.875rem;margin-bottom:0}.docs__item:last-child{margin-right:0}}.cards__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:1.25rem}@media (min-width:768px){.cards__list{margin-right:-.625rem;margin-left:-.625rem}}@media (min-width:1440px){.cards__list{margin-top:-1.875rem;margin-right:-1rem;margin-left:-1rem}}.cards__item{width:100%;margin-top:1.25rem}@media (min-width:768px){.cards__item{width:50%;padding-right:.625rem;padding-left:.625rem}}@media (min-width:1440px){.cards__item{width:33.33333%;margin-top:1.875rem;padding-right:1rem;padding-left:1rem}}@media (min-width:768px){.cards__item--big{width:100%}}@media (min-width:1440px){.cards__item--big{width:66.66667%}}.card{position:relative;overflow:hidden;height:22rem;border-radius:8px;filter:drop-shadow(0 12px 40px rgba(0,0,0,.03)) drop-shadow(0 3px 10px rgba(164,164,164,.03));background-color:#fff}.card:hover{cursor:pointer;box-shadow:0 12px 40px rgba(0,0,0,.03),0 3px 10px hsla(0,0%,64.3%,.03)}.card:hover,.card:hover p{color:#34aadd}.card__image{position:relative;overflow:hidden;width:100%;margin-bottom:.625rem}.card__image:before{display:block;padding-top:47.46269%;content:""}@media (min-width:768px){.card__image:before{padding-top:44.91525%}}@media (min-width:1440px){.card__image:before{padding-top:40.56122%}}.card__image-pic{width:100%;height:100%;object-fit:cover;font-family:"object-fit: cover"}.card__box,.card__image-pic{position:absolute;top:0;right:0;bottom:0;left:0}.card__content{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;overflow:hidden;margin-right:1.25rem;margin-left:1.25rem}.card__content,.card__footer{display:-ms-flexbox;display:flex}.card__footer{font-size:.75rem;position:absolute;right:0;bottom:0;left:0;z-index:15;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:4rem;padding-top:20px;padding-right:1.25rem;padding-left:1.25rem;color:#768298;background-color:#fff}.card__footer--big{color:#fff}.card__heading{font-size:16px;font-weight:500;line-height:1.5rem;z-index:15;height:100%;margin:0 0 .625rem}@media (min-width:768px){.card__heading{font-size:18px}}.card__text{overflow:hidden;z-index:15;font-size:14px;line-height:1.3125rem;height:auto;max-height:5.3125rem;margin:0;opacity:1;color:#768298}.card--big .card__image{height:100%}.card--big .card__content{position:absolute;top:50%;color:#fff}.card--big .card__footer{background-color:transparent}.card--big:before{position:absolute;top:0;z-index:10;width:100%;height:100%;content:"";opacity:.7;background-color:#121920}.card--big p{color:#fff}.card--big:hover:before{cursor:pointer;transition:opacity .2s linear;opacity:.9}.card--big:hover p{color:#fff}.card__icon{position:absolute;top:0;right:0;z-index:15;width:2.1875rem;height:2.1875rem;padding:.375rem;background-color:#fff;border-radius:0 0 0 8px}.card__icon--big{background-color:transparent}.card__icon--big .card__icon-star{fill:transparent;stroke:#fff}.card__icon--big .card__icon-star:hover{fill:rgba(52,170,221,.7294117647058823)}.card__icon-star{fill:#fff;stroke:#34aadd}.card__icon-star:hover{fill:rgba(52,170,221,.34901960784313724);transition:.2s linear}.card__icon--active{fill:#34aadd}.actions{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.actions:last-child{margin-right:0}.actions__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-right:.75rem}.actions__item--icon{width:.8125rem;height:.75rem;margin-right:.375rem;fill:#bbc4d6}.actions__item--icon :hover{fill:#768298;transition:.1s linear}.actions__item--number{font-size:.75rem}.tabs{transition:.3s ease-in-out}.tabs--blue .tabs__item{color:#34aadd;border-radius:.25rem;background-color:#ebebf1}.tabs--blue .tabs__item--active{color:#fff;background-color:#34aadd}.tabs--red .tabs__item{position:relative;margin-right:1.875rem;padding-right:0;padding-left:0;color:#bbc4d6}.tabs--red .tabs__item--active{color:#121920}.tabs--red .tabs__item--active:after{content:"";position:absolute;bottom:-21px;left:50%;transform:translateX(-50%);width:100%;height:4px;padding:.625rem 0;border-top:.25rem solid #dc2c53;border-radius:.25rem}.tabs--red .tabs__list{border-bottom:1px solid #bbc4d6}.tabs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.tabs__item{font-size:16px;font-weight:500;line-height:1.25rem;padding:.625rem 1.25rem;cursor:pointer}.tabs__item+.tabs__item{margin-left:1.25rem}.tabs__block{display:none}.tabs__block--active{display:block}.form__field-text{font-size:.75rem;color:#4b4b4b}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcyIsInN0eWxlLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jhc2UvX2ZvbnRzLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jhc2UvX2dlbmVyaWMuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYWJzdHJhY3RzL19mdW5jdGlvbnMuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19jb250YWluZXIuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19oZWFkZXIuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19mb290ZXIuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19wYWdlLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jsb2Nrcy9faXRlbXMuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19idXR0b24uc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYWJzdHJhY3RzL19taXhpbnMuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19pY29uLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jsb2Nrcy9faGVhZGluZy5zY3NzIiwiL1VzZXJzL3NvbG9uYXN0eS9EZXNrdG9wL3RyYWluaW5nL3NvbG92ZXZhX2FfcXNjaG9vbC9hc3NldHMvc2Nzcy9ibG9ja3MvX2lucHV0LnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jsb2Nrcy9fbG9nby5zY3NzIiwiL1VzZXJzL3NvbG9uYXN0eS9EZXNrdG9wL3RyYWluaW5nL3NvbG92ZXZhX2FfcXNjaG9vbC9hc3NldHMvc2Nzcy9ibG9ja3MvX3Byb2ZpbGUuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19zb2NpYWwuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19kb2NzLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jsb2Nrcy9fY2FyZHMuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19jYXJkLnNjc3MiLCIvVXNlcnMvc29sb25hc3R5L0Rlc2t0b3AvdHJhaW5pbmcvc29sb3ZldmFfYV9xc2Nob29sL2Fzc2V0cy9zY3NzL2Jsb2Nrcy9fYWN0aW9ucy5zY3NzIiwiL1VzZXJzL3NvbG9uYXN0eS9EZXNrdG9wL3RyYWluaW5nL3NvbG92ZXZhX2FfcXNjaG9vbC9hc3NldHMvc2Nzcy9ibG9ja3MvX3RhYnMuc2NzcyIsIi9Vc2Vycy9zb2xvbmFzdHkvRGVza3RvcC90cmFpbmluZy9zb2xvdmV2YV9hX3FzY2hvb2wvYXNzZXRzL3Njc3MvYmxvY2tzL19mb3JtLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVUEsS0FDRSxnQkFBaUIsQ0FDakIsNkJBQXVDLENBVXpDLEtBQ0UsUUFBUyxDQU9YLEtBQ0UsYUFBYyxDQVFoQixHQUNFLGFBQWMsQ0FDZCxjQUFnQixDQVdsQixHQUNFLHNCQUF1QixDQUN2QixRQUFTLENBQ1QsZ0JBQTBCLENBUTVCLElBQ0UsK0JBQWlDLENBQ2pDLGFBQXVCLENBVXpCLEVBQ0UsNEJBQTZCLENBUS9CLFlBQ0Usa0JBQW1CLENBQ25CLHlCQUEwQixDQUMxQixnQ0FBMEMsQ0FPNUMsU0FFRSxrQkFBbUIsQ0FRckIsY0FHRSwrQkFBaUMsQ0FDakMsYUFBdUIsQ0FPekIsTUFDRSxhQUFjLENBUWhCLFFBRUUsYUFBYyxDQUNkLGFBQWMsQ0FDZCxpQkFBa0IsQ0FDbEIsdUJBQXdCLENBRzFCLElBQ0UsYUFBZSxDQUdqQixJQUNFLFNBQVcsQ0FVYixJQUNFLGlCQUFrQixDQVdwQixzQ0FLRSxtQkFBb0IsQ0FDcEIsY0FBZSxDQUNmLGdCQUFpQixDQUNqQixRQUFrQixDQVFwQixhQUVFLGdCQUFpQixDQVFuQixjQUVFLG1CQUFvQixDQU90QixnREFJRSx5QkFBMEIsQ0FPNUIsd0hBSUUsaUJBQWtCLENBQ2xCLFNBQVUsQ0FPWiw0R0FJRSw2QkFBOEIs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SSxZQUFhLENBQ2IsZUFBZ0IsQ0FDaEIsYVhDWSxDV0NaLGVGVUEsY1RxQmtCLENTcEJsQixlVDJCb0IsQ1MxQnBCLGdCVGdDb0IsQ1M5QnBCLDJCRWRBLGVGZUksY1RlYSxDVzVCaEIsQ0FFRCxnQkZnQkEsY1RXa0IsQ1NWbEIsZVRpQm9CLENTaEJwQixnQlRzQm9CLENTcEJwQiwyQkVwQkEsZ0JGcUJJLGNUTWMsQ1NMZCxnQlRvQmUsQ1d4Q2xCLENBRUQsaUJGdUJBLGNURWtCLENTRGxCLGVUTW9CLENTTHBCLGdCVGFtQixDV3BDZixhWERZLENTMEJoQiwyQkUzQkEsaUJGNEJJLGNUSmUsQ1NLZixnQlRPZ0IsQ1dqQ25CLENDaEJMLE9BQ0ksaUJBQWtCLENBS2pCLGlDQUVPLHVCQUF3QixDQUN4QixvQkFBcUIsQ0FRckIsZ0JaOEJZLENZNUJaLGNWVnlCLENVV3pCLHlCVlh5QixDVWF6QixXQUFZLENBaEJuQixvREFNVyxPQUFRLENBRVIsc0JBQXVCLENBWWxDLDhCQUVPLFdBeEJpQixDQTRCeEIsaUNBRU8sc0JWekJ5QixDVTJCekIseUJBSlAsaUNBS1csc0JWNUJxQixDVThCNUIsQ0FHSiw4QkFFTyxpQkFBa0IsQ0FDbEIsT0FBUSxDQUNSLFlWckN5QixDVXVDekIsMEJBQTJCLENBRTNCLHlCQVJQLDhCQVNXLFlWMUNxQixDVTRDNUIsQ0FPTCwrQ0FKUSw2QkFtQlksQ0FmcEIsZ0JBQ0ksY1pwQmEsQ1lxQmIsZ0JaZmdCLENZaUJoQixhQUFjLENBRWQsVUFBVyxDQUNYLGVWMUQ2QixDVTJEN0IsaUJWM0Q2QixDVTZEN0IsMkJBQTRCLENBRzVCLHNCVmhFNkIsQ1VpRTdCLHFCWnJFTyxDWXNFUCxlQUFnQixDQWZuQixzQ0FxQk8sU0FBeUIsQ0FyQmhDLDZCQWtCTyxjWnJDUyxDWXVDVCxhWnJFSyxDWXNFTCxTQUF5QixDQXJCaEMsc0NBeUJPLGNaNUNTLENZOENULGFaNUVLLENZaURaLHVDQStCTyxjWmxEUyxDWW9EVCxhWmxGSyxDWWlEWixzQkFxQ08sb0JaM0ZRLENZNEZSLFlBQWEsQ0F0Q3BC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SyxDb0IwQ2IsWUFDSSxtQkFBYSxDQUFiLFlBQWEsQ0FDYixxQkFBbUIsQ0FBbkIsa0JBQW1CLENBR3ZCLFlBQ0ksY3BCbkJnQixDb0JvQmhCLGVwQmpCZ0IsQ29Ca0JoQixtQmxCcEQ2QixDa0JzRDdCLHVCbEJ0RDZCLENrQndEN0IsY0FBZSxDQVBsQix3QkFVTyxtQmxCM0R5QixDa0IrRGpDLGFBQ0ksWUFBYSxDQUViLHFCQUNJLGFBQWMsQ0MzRXRCLGtCQUNJLGdCbkJPNkIsQ21CTjdCLGFyQmNTIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKipcbiogVmVuZG9yc1xuKi9cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiogQWJzdHJhY3RzXG4qL1xuLyoqXG4qIENvbG9yc1xuKi9cbi8qKlxuKiBGb250c1xuKi9cbi8qKlxuKiBCcmVha3BvaW50c1xuKi9cbi8qKlxuKiBMYXlvdXRcbiovXG4vKipcbiogU2l6ZXNcbiovXG4vKipcbiogVHJhbnNpdGlvbnMgYW5kIEFuaW1hdGlvbnNcbiovXG4vKipcbiogUmFkaXVzXG4qL1xuLyoqXG4qIEJveC1zaGFkb3dzXG4qL1xuLyoqXG4qIFotaW5kZXhlc1xuKi9cbi8qKlxuKiBCYXNlXG4qL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL3B1YmxpYy9mb250cy9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9wdWJsaWMvZm9udHMvUm9ib3RvLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgKjo6YmVmb3JlLCAqOjphZnRlciB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgY29sb3I6ICMxMjE5MjA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUZBRkE7IH1cblxuYm9keSB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7IH1cblxuaDEge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXNpemU6IDMwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxMzAlO1xuICBjb2xvcjogIzEyMTkyMDsgfVxuICBoMTpub3QoW2NsYXNzXSkge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIEBtZWRpYSAoKG1pbi13aWR0aDogNzY4cHgpKSB7XG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiAzNnB4OyB9IH1cblxuaDIge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXNpemU6IDMwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxMzAlO1xuICBjb2xvcjogIzEyMTkyMDsgfVxuICBoMjpub3QoW2NsYXNzXSkge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIEBtZWRpYSAoKG1pbi13aWR0aDogNzY4cHgpKSB7XG4gICAgaDIge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDEyMCU7IH0gfVxuXG5oMyB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDEyMCU7XG4gIGNvbG9yOiAjM0MzQzNDOyB9XG4gIGgzOm5vdChbY2xhc3NdKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgQG1lZGlhICgobWluLXdpZHRoOiA3NjhweCkpIHtcbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMTMwJTsgfSB9XG5cbnAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxNjclOyB9XG4gIHA6bm90KFtjbGFzc10pIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuICBAbWVkaWEgKChtaW4td2lkdGg6IDc2OHB4KSkge1xuICAgIHAge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE2NyU7IH0gfVxuXG5vbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGNvdW50ZXItcmVzZXQ6IGxpO1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgb2w6bm90KFtjbGFzc10pIHtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMjBweDsgfVxuICBvbDpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMTBweDsgfVxuICBvbCBsaSB7XG4gICAgbGluZS1oZWlnaHQ6IDFyZW07XG4gICAgY291bnRlci1pbmNyZW1lbnQ6IGxpO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICAgIHBhZGRpbmctbGVmdDogMC42MjVyZW07IH1cbiAgICBvbCBsaTo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IGNvdW50ZXJzKGxpLCBcIi5cIikgXCIuXCI7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNjI1cmVtO1xuICAgICAgY29sb3I6ICNEQzJDNTM7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogMWVtOyB9XG4gICAgQG1lZGlhICgobWluLXdpZHRoOiA3NjhweCkpIHtcbiAgICAgIG9sIGxpIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTg3NXJlbTtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cblxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogMDtcbiAgbWFyZ2luLWJsb2NrLWVuZDogMDtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7IH1cbiAgdWw6bm90KFtjbGFzc10pIHtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMjBweDsgfVxuICAgIHVsOm5vdChbY2xhc3NdKSBsaSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBsaW5lLWhlaWdodDogMXJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgICB1bDpub3QoW2NsYXNzXSkgbGk6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IDAuMzEyNXJlbTtcbiAgICAgICAgaGVpZ2h0OiAwLjMxMjVyZW07XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC42MjVyZW07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0RDMkM1MzsgfVxuICAgICAgQG1lZGlhICgobWluLXdpZHRoOiA3NjhweCkpIHtcbiAgICAgICAgdWw6bm90KFtjbGFzc10pIGxpIHtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTg3NXJlbTsgfSB9XG5cbmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDEuMjVyZW0gMS41NjI1cmVtO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI0RDMkM1MztcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTY3JTsgfVxuICBAbWVkaWEgKChtaW4td2lkdGg6IDc2OHB4KSkge1xuICAgIGJsb2NrcXVvdGUge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cblxuYTpub3QoW2NsYXNzXSkge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxNjclO1xuICBjb2xvcjogIzM0QUFERDsgfVxuICBhOm5vdChbY2xhc3NdKTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYTpub3QoW2NsYXNzXSk6dmlzaXRlZCB7XG4gICAgY29sb3I6ICNBN0NDREM7IH1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLypcbiogQ29tcG9uZW50c1xuKi9cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA4MHJlbTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgcGFkZGluZy1yaWdodDogMS4yNXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjI1cmVtOyB9XG5cbi5oZWFkZXIge1xuICBoZWlnaHQ6IDYuNTYyNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogMHB4IDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmhlYWRlciB7XG4gICAgICBoZWlnaHQ6IDVyZW07IH0gfVxuICAuaGVhZGVyX19yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgLmhlYWRlcl9fY29sLS1sb2dvIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMuMTI1cmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAuaGVhZGVyX19jb2wtLWxvZ28ge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDMuODEyNXJlbTsgfSB9XG4gIC5oZWFkZXJfX2NvbC0tc2VhcmNoIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0LjA2MjVyZW07XG4gICAgcmlnaHQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5oZWFkZXJfX2NvbC0tc2VhcmNoIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMy44MTI1cmVtOyB9IH1cbiAgLmhlYWRlcl9fY29sLS1wcm9maWxlIHtcbiAgICBwYWRkaW5nLXRvcDogMS4yNXJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMS4yNXJlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuMTg3NXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmhlYWRlcl9fY29sLS1wcm9maWxlIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDAuMDYyNXJlbSBzb2xpZCAjRUJFQkYxOyB9IH1cbiAgLmhlYWRlcl9fbG9nbyB7XG4gICAgd2lkdGg6IDguNDM3NXJlbTtcbiAgICBoZWlnaHQ6IDEuODc1cmVtOyB9XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiAwcHggM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuZm9vdGVyIHtcbiAgICAgIGhlaWdodDogNi4zNzVyZW07IH0gfVxuICAuZm9vdGVyX19yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAuZm9vdGVyX19yb3cge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93OyB9IH1cbiAgLmZvb3Rlcl9fY29sLS1zb2NpYWwge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEuMjVyZW0gMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0JCQzRENjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmZvb3Rlcl9fY29sLS1zb2NpYWwge1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgcGFkZGluZy1yaWdodDogMi41cmVtO1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gICAgICAuZm9vdGVyX19jb2wtLXNvY2lhbCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIuNXJlbTtcbiAgICAgICAgbWFyZ2luOiAxLjI1cmVtIDA7XG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNCQkM0RDY7IH0gfVxuICAuZm9vdGVyX19jb2wtLWRvY3Mge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEuMjVyZW0gMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0JCQzRENjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmZvb3Rlcl9fY29sLS1kb2NzIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE0NDBweCkge1xuICAgICAgLmZvb3Rlcl9fY29sLS1kb2NzIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIuNXJlbTsgfSB9XG4gIC5mb290ZXJfX2NvbC0tbG9nbyB7XG4gICAgcGFkZGluZzogMS4yNXJlbSAwOyB9XG5cbi5wYWdlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwdmg7IH1cbiAgLnBhZ2VfX2hlYWRlciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDEwMDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBmbGV4LXNocmluazogMDsgfVxuICAucGFnZV9fY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBtYXJnaW4tdG9wOiA2LjU2MjVyZW07XG4gICAgcGFkZGluZy10b3A6IDIuNXJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNi4yNXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLnBhZ2VfX2NvbnRlbnQge1xuICAgICAgICBtYXJnaW4tdG9wOiA1cmVtO1xuICAgICAgICBwYWRkaW5nLXRvcDogMy4xMjVyZW07IH0gfVxuICAucGFnZV9fZm9vdGVyIHtcbiAgICBmbGV4LXNocmluazogMDsgfVxuXG4uaXRlbXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5pdGVtcyB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgZ2FwOiAycmVtOyB9IH1cbiAgLml0ZW1zX19zaWRlYmFyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLml0ZW1zX19zaWRlYmFyIHtcbiAgICAgICAgd2lkdGg6IDE3Ljg3NXJlbTsgfSB9XG4gIC5pdGVtc19fbWFpbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAuaXRlbXNfX21haW4ge1xuICAgICAgICBmbGV4OiBhdXRvOyB9IH1cblxuLmJ1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDEyMCU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogMy4xMjVyZW07XG4gIHBhZGRpbmc6IDAgMS4yNXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiAwLjMxMjVyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgLjJzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuMnMgbGluZWFyOyB9XG4gIC5idXR0b24tLW1lZGl1bSB7XG4gICAgaGVpZ2h0OiA0MHB4OyB9XG4gIC5idXR0b24tLXNtYWxsIHtcbiAgICBoZWlnaHQ6IDI5cHg7IH1cbiAgLmJ1dHRvbi0tc3F1YXJlZCB7XG4gICAgYm9yZGVyLXJhZGl1czogMC4zMTI1cmVtIDAgMCAwOyB9XG4gIC5idXR0b24tLWNvbG9yIHtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBiYWNrZ3JvdW5kOiAjMzRBQUREOyB9XG4gICAgLmJ1dHRvbi0tY29sb3I6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzY2ODBBRTsgfVxuICAgIC5idXR0b24tLWNvbG9yOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjNjY4MEFFO1xuICAgICAgb3BhY2l0eTogLjU7IH1cbiAgLmJ1dHRvbi0tbm9Db2xvciB7XG4gICAgY29sb3I6ICMzNEFBREQ7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgIC5idXR0b24tLW5vQ29sb3I6aG92ZXIge1xuICAgICAgY29sb3I6ICM2NjgwQUU7IH1cbiAgICAuYnV0dG9uLS1ub0NvbG9yOmFjdGl2ZSB7XG4gICAgICBjb2xvcjogIzY2ODBBRTtcbiAgICAgIG9wYWNpdHk6IDAuNTsgfVxuICAuYnV0dG9uLS1zaW1wbGUge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBjb2xvcjogIzM0QUFERDtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cbiAgICAuYnV0dG9uLS1zaW1wbGVfX3RleHQge1xuICAgICAgcGFkZGluZzogNXB4OyB9XG4gICAgLmJ1dHRvbi0tc2ltcGxlOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNjY4MEFFOyB9XG4gICAgLmJ1dHRvbi0tc2ltcGxlOmFjdGl2ZSB7XG4gICAgICBjb2xvcjogIzY2ODBBRTtcbiAgICAgIG9wYWNpdHk6IDAuNTsgfVxuICAuYnV0dG9uLS1jb2xvci5idXR0b24tLWRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kOiAjRUJFQkYxOyB9XG4gIC5idXR0b24tLW5vQ29sb3IuYnV0dG9uLS1kaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAuYnV0dG9uLS1kaXNhYmxlZCB7XG4gICAgY29sb3I6ICNCQkM0RDY7XG4gICAgY3Vyc29yOiBkZWZhdWx0OyB9XG4gICAgLmJ1dHRvbi0tZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgY29sb3I6IG5vbmU7IH1cbiAgLmJ1dHRvbi0taWNvbmVkLmJ1dHRvbi0tdGFiSWNvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgY29sb3I6ICNCQkM0RDY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAuYnV0dG9uLS1pY29uZWQuYnV0dG9uLS10YWJJY29uIC5idXR0b25fX2ljb24tLXRhYiB7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAuYnV0dG9uLS1pY29uZWQuYnV0dG9uLS10YWJJY29uOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNzY4Mjk4O1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgLjJzIGxpbmVhcjtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjJzIGxpbmVhcjsgfVxuICAuYnV0dG9uX190ZXh0IHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1yaWdodDogMC42MjVyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDAuNjI1cmVtOyB9XG4gIC5idXR0b25fX2ljb24ge1xuICAgIGhlaWdodDogMC42MjVyZW07XG4gICAgd2lkdGg6IDAuNjI1cmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgIC5idXR0b25fX2ljb24tLW1lZGl1bSB7XG4gICAgICBoZWlnaHQ6IDFyZW07XG4gICAgICB3aWR0aDogMXJlbTsgfVxuICAgIC5idXR0b25fX2ljb24tLWdyYXkge1xuICAgICAgY29sb3I6ICM3NjgyOTg7IH1cblxuLmljb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4uaGVhZGluZyB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGNvbG9yOiAjMTIxOTIwOyB9XG4gIC5oZWFkaW5nLS1odWdlIHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBsaW5lLWhlaWdodDogMTMwJTsgfVxuICAgIEBtZWRpYSAoKG1pbi13aWR0aDogNzY4cHgpKSB7XG4gICAgICAuaGVhZGluZy0taHVnZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzZweDsgfSB9XG4gIC5oZWFkaW5nLS1sYXJnZSB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEzMCU7IH1cbiAgICBAbWVkaWEgKChtaW4td2lkdGg6IDc2OHB4KSkge1xuICAgICAgLmhlYWRpbmctLWxhcmdlIHtcbiAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTIwJTsgfSB9XG4gIC5oZWFkaW5nLS1tZWRpdW0ge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxMjAlO1xuICAgIGNvbG9yOiAjM0MzQzNDOyB9XG4gICAgQG1lZGlhICgobWluLXdpZHRoOiA3NjhweCkpIHtcbiAgICAgIC5oZWFkaW5nLS1tZWRpdW0ge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxMzAlOyB9IH1cblxuLmlucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5pbnB1dC0tdGV4dGFyZWEgLmlucHV0X19jb250cm9sIHtcbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuICAgIGxpbmUtaGVpZ2h0OiAxNjAlO1xuICAgIGhlaWdodDogNi4yNXJlbTtcbiAgICBwYWRkaW5nOiAxLjA2MjVyZW0gMS4yNXJlbTtcbiAgICByZXNpemU6IG5vbmU7IH1cbiAgICAuaW5wdXQtLXRleHRhcmVhIC5pbnB1dF9fY29udHJvbDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICAuaW5wdXQtLXNtYWxsIC5pbnB1dF9fY29udHJvbCB7XG4gICAgaGVpZ2h0OiA0MHB4OyB9XG4gIC5pbnB1dC0tYnV0dG9uZWQgLmlucHV0X19jb250cm9sIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDMuMDYyNXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmlucHV0LS1idXR0b25lZCAuaW5wdXRfX2NvbnRyb2wge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDIuNDM3NXJlbTsgfSB9XG4gIC5pbnB1dC0tc2VhcmNoIC5pbnB1dF9fYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMS4yNXJlbTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5pbnB1dC0tc2VhcmNoIC5pbnB1dF9fYnV0dG9uIHtcbiAgICAgICAgbGVmdDogMC42MjVyZW07IH0gfVxuICAuaW5wdXQtLXNlYXJjaCAuaW5wdXRfX2NvbnRyb2wge1xuICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkICNFQkVCRjE7IH1cbiAgLmlucHV0X19jb250cm9sIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2MCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzLjEyNXJlbTtcbiAgICBwYWRkaW5nOiAwIDEuMjVyZW07XG4gICAgdHJhbnNpdGlvbjogY29sb3IgLjJzIGxpbmVhcjtcbiAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCAjRUJFQkYxO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMzEyNXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgICAuaW5wdXRfX2NvbnRyb2w6OnBsYWNlaG9sZGVyIHtcbiAgICAgIC8qIENocm9tZSwgRmlyZWZveCwgT3BlcmEsIFNhZmFyaSAxMC4xKyAqL1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNCQkM0RDY7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgLyogRmlyZWZveCAqLyB9XG4gICAgLmlucHV0X19jb250cm9sOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgICAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMC0xMSAqL1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNCQkM0RDY7IH1cbiAgICAuaW5wdXRfX2NvbnRyb2w6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgICAvKiBNaWNyb3NvZnQgRWRnZSAqL1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNCQkM0RDY7IH1cbiAgICAuaW5wdXRfX2NvbnRyb2w6Zm9jdXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjNzY4Mjk4O1xuICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAgIC5pbnB1dF9fY29udHJvbDpkaXNhYmxlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkYxOyB9XG4gICAgLmlucHV0X19jb250cm9sLS1lcnJvciB7XG4gICAgICBmb250LXNpemU6IDAuNjI1cmVtO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjREMyQzUzO1xuICAgICAgY29sb3I6ICNEQzJDNTM7IH1cbiAgICAgIC5pbnB1dF9fY29udHJvbC0tZXJyb3I6Zm9jdXMge1xuICAgICAgICBib3JkZXItY29sb3I6ICNEQzJDNTM7IH1cbiAgICAuaW5wdXRfX2NvbnRyb2wtZXJyb3Ige1xuICAgICAgbGluZS1oZWlnaHQ6IDE2MCU7XG4gICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLmxvZ28tLXNtYWxsIHtcbiAgd2lkdGg6IDkzLjQycHg7XG4gIGhlaWdodDogMTguMXB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgICAubG9nby0tc21hbGwge1xuICAgICAgd2lkdGg6IDEzNS4wNHB4O1xuICAgICAgaGVpZ2h0OiAzMC4zMnB4OyB9IH1cblxuLnByb2ZpbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnByb2ZpbGVfX2Jsb2NrIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAucHJvZmlsZV9fYmxvY2sge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0OyB9IH1cbiAgLnByb2ZpbGVfX2ljb24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMS41cmVtO1xuICAgIGhlaWdodDogMS41cmVtO1xuICAgIGZpbGw6ICMzNEFBREQ7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5wcm9maWxlX19pY29uIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5wcm9maWxlX19uYW1lIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEyMCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjYyNXJlbTtcbiAgICBjb2xvcjogIzc2ODI5ODsgfVxuICAucHJvZmlsZV9fYXZhdGFyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMi41cmVtO1xuICAgIGhlaWdodDogMi41cmVtOyB9XG4gIC5wcm9maWxlX19saW5rIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5zb2NpYWxfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuc29jaWFsX19saXN0IHtcbiAgICAgIGp1c3RpZnktY29udGVudDogbGVmdDsgfSB9XG5cbi5zb2NpYWxfX2l0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tcmlnaHQ6IDEuNDM3NXJlbTsgfVxuICAuc29jaWFsX19pdGVtOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1yaWdodDogMDsgfVxuXG4uc29jaWFsX19pY29uID4gLnNvY2lhbF9faWNvbi1waWMge1xuICBmaWxsOiAjQkJDNEQ2OyB9XG4gIC5zb2NpYWxfX2ljb24gPiAuc29jaWFsX19pY29uLXBpYzpob3ZlciB7XG4gICAgZmlsbDogIzc2ODI5ODtcbiAgICB0cmFuc2l0aW9uOiBmaWxsIC4zcyBsaW5lYXI7IH1cblxuLnNvY2lhbF9faWNvbi1waWMge1xuICB3aWR0aDogMi41cmVtO1xuICBoZWlnaHQ6IDIuNXJlbTsgfVxuXG4uZG9jc19fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmRvY3NfX2xpc3Qge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG5cbi5kb2NzX19pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbiAgY29sb3I6ICMzNEFBREQ7IH1cbiAgLmRvY3NfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuZG9jc19faXRlbSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuODc1cmVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgICAgLmRvY3NfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDsgfSB9XG5cbi5jYXJkc19fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLXRvcDogMS4yNXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZHNfX2xpc3Qge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAtMC42MjVyZW07XG4gICAgICBtYXJnaW4tbGVmdDogLTAuNjI1cmVtOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDE0NDBweCkge1xuICAgIC5jYXJkc19fbGlzdCB7XG4gICAgICBtYXJnaW4tdG9wOiAtMS44NzVyZW07XG4gICAgICBtYXJnaW4tcmlnaHQ6IC0xcmVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IC0xcmVtOyB9IH1cblxuLmNhcmRzX19pdGVtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDEuMjVyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmNhcmRzX19pdGVtIHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwLjYyNXJlbTtcbiAgICAgIHBhZGRpbmctbGVmdDogMC42MjVyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gICAgLmNhcmRzX19pdGVtIHtcbiAgICAgIHdpZHRoOiAzMy4zMzMzMyU7XG4gICAgICBtYXJnaW4tdG9wOiAxLjg3NXJlbTtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDFyZW07XG4gICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZHNfX2l0ZW0tLWJpZyB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgICAuY2FyZHNfX2l0ZW0tLWJpZyB7XG4gICAgICB3aWR0aDogNjYuNjY2NjclOyB9IH1cblxuLmNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGhlaWdodDogMjJyZW07XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMTJweCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4wMykpIGRyb3Atc2hhZG93KDBweCAzcHggMTBweCByZ2JhKDE2NCwgMTY0LCAxNjQsIDAuMDMpKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsgfVxuICAuY2FyZDpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGNvbG9yOiAjMzRBQUREO1xuICAgIGJveC1zaGFkb3c6IDAgMTJweCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4wMyksIDAgM3B4IDEwcHggcmdiYSgxNjQsIDE2NCwgMTY0LCAwLjAzKTsgfVxuICAuY2FyZDpob3ZlciBwIHtcbiAgICBjb2xvcjogIzM0QUFERDsgfVxuICAuY2FyZF9faW1hZ2Uge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgLmNhcmRfX2ltYWdlOjpiZWZvcmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nLXRvcDogNDcuNDYyNjklO1xuICAgICAgY29udGVudDogXCJcIjsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC5jYXJkX19pbWFnZTo6YmVmb3JlIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogNDQuOTE1MjUlOyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgICAgICAgLmNhcmRfX2ltYWdlOjpiZWZvcmUge1xuICAgICAgICAgIHBhZGRpbmctdG9wOiA0MC41NjEyMiU7IH0gfVxuICAgIC5jYXJkX19pbWFnZS1waWMge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyXCI7IH1cbiAgLmNhcmRfX2JveCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDsgfVxuICAuY2FyZF9fY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAxLjI1cmVtOyB9XG4gIC5jYXJkX19mb290ZXIge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBoZWlnaHQ6IDRyZW07XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMS4yNXJlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuMjVyZW07XG4gICAgY29sb3I6ICM3NjgyOTg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsgfVxuICAgIC5jYXJkX19mb290ZXItLWJpZyB7XG4gICAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAuY2FyZF9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNXJlbTtcbiAgICB6LWluZGV4OiAxNTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2FyZF9faGVhZGluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDsgfSB9XG4gIC5jYXJkX190ZXh0IHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHotaW5kZXg6IDE1O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMS4zMTI1cmVtO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiA1LjMxMjVyZW07XG4gICAgbWFyZ2luOiAwO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgY29sb3I6ICM3NjgyOTg7IH1cbiAgLmNhcmQtLWJpZyAuY2FyZF9faW1hZ2Uge1xuICAgIGhlaWdodDogMTAwJTsgfVxuICAuY2FyZC0tYmlnIC5jYXJkX19jb250ZW50IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgLmNhcmQtLWJpZyAuY2FyZF9fZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAuY2FyZC0tYmlnOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgei1pbmRleDogMTA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgb3BhY2l0eTogMC43O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMjE5MjA7IH1cbiAgLmNhcmQtLWJpZyBwIHtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAuY2FyZC0tYmlnOmhvdmVyOjpiZWZvcmUge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBsaW5lYXI7XG4gICAgb3BhY2l0eTogMC45OyB9XG4gIC5jYXJkLS1iaWc6aG92ZXIgcCB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgLmNhcmRfX2ljb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgei1pbmRleDogMTU7XG4gICAgd2lkdGg6IDIuMTg3NXJlbTtcbiAgICBoZWlnaHQ6IDIuMTg3NXJlbTtcbiAgICBwYWRkaW5nOiAwLjM3NXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMHB4IDhweDsgfVxuICAgIC5jYXJkX19pY29uLS1iaWcge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAuY2FyZF9faWNvbi0tYmlnIC5jYXJkX19pY29uLXN0YXIge1xuICAgICAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gICAgICBzdHJva2U6ICNmZmZmZmY7IH1cbiAgICAgIC5jYXJkX19pY29uLS1iaWcgLmNhcmRfX2ljb24tc3Rhcjpob3ZlciB7XG4gICAgICAgIGZpbGw6ICMzNGFhZGRiYTsgfVxuICAgIC5jYXJkX19pY29uLXN0YXIge1xuICAgICAgZmlsbDogd2hpdGU7XG4gICAgICBzdHJva2U6ICMzNEFBREQ7IH1cbiAgICAgIC5jYXJkX19pY29uLXN0YXI6aG92ZXIge1xuICAgICAgICBmaWxsOiAjMzRhYWRkNTk7XG4gICAgICAgIHRyYW5zaXRpb246IC4ycyBsaW5lYXI7IH1cbiAgICAuY2FyZF9faWNvbi0tYWN0aXZlIHtcbiAgICAgIGZpbGw6ICMzNEFBREQ7IH1cblxuLmFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5hY3Rpb25zOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAuYWN0aW9uc19fYmxvY2sge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW07IH1cbiAgLmFjdGlvbnNfX2l0ZW0tLWljb24ge1xuICAgIHdpZHRoOiAwLjgxMjVyZW07XG4gICAgaGVpZ2h0OiAwLjc1cmVtO1xuICAgIG1hcmdpbi1yaWdodDogMC4zNzVyZW07XG4gICAgZmlsbDogI2JiYzRkNjsgfVxuICAgIC5hY3Rpb25zX19pdGVtLS1pY29uIDpob3ZlciB7XG4gICAgICBmaWxsOiAjNzY4Mjk4O1xuICAgICAgdHJhbnNpdGlvbjogLjFzIGxpbmVhcjsgfVxuICAuYWN0aW9uc19faXRlbS0tbnVtYmVyIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cblxuLnRhYnMge1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2UtaW4tb3V0OyB9XG4gIC50YWJzLS1ibHVlIC50YWJzX19pdGVtIHtcbiAgICBjb2xvcjogIzM0QUFERDtcbiAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRjE7IH1cbiAgICAudGFicy0tYmx1ZSAudGFic19faXRlbS0tYWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM0QUFERDsgfVxuICAudGFicy0tcmVkIC50YWJzX19pdGVtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjg3NXJlbTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBjb2xvcjogI0JCQzRENjsgfVxuICAgIC50YWJzLS1yZWQgLnRhYnNfX2l0ZW0tLWFjdGl2ZSB7XG4gICAgICBjb2xvcjogIzEyMTkyMDsgfVxuICAgICAgLnRhYnMtLXJlZCAudGFic19faXRlbS0tYWN0aXZlOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAtMjFweDtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDRweDtcbiAgICAgICAgcGFkZGluZzogMC42MjVyZW0gMDtcbiAgICAgICAgYm9yZGVyLXRvcDogMC4yNXJlbSBzb2xpZCAjREMyQzUzO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtOyB9XG4gIC50YWJzLS1yZWQgLnRhYnNfX2xpc3Qge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjQkJDNEQ2OyB9XG4gIC50YWJzX19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnRhYnNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI1cmVtO1xuICAgIHBhZGRpbmc6IDAuNjI1cmVtIDEuMjVyZW07XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgLnRhYnNfX2l0ZW0gKyAudGFic19faXRlbSB7XG4gICAgICBtYXJnaW4tbGVmdDogMS4yNXJlbTsgfVxuICAudGFic19fYmxvY2sge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAudGFic19fYmxvY2stLWFjdGl2ZSB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4uZm9ybV9fZmllbGQtdGV4dCB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgY29sb3I6ICM0QjRCNEI7IH1cbiIsIlxuQGZvbnQtZmFjZSB7XG4gICAgJGZvbnQtbmFtZTogXCJSb2JvdG8tUmVndWxhclwiO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktY3VzdG9tO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIHNyYzogdXJsKFwiLyN7JGZvbnQtcGF0aH0vI3skZm9udC1uYW1lfS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksXG4gICAgICAgICB1cmwoXCIvI3skZm9udC1wYXRofS8jeyRmb250LW5hbWV9LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuIiwiLyoqXG4qIENvbG9yc1xuKi9cblxuJGJ1bmtlcjogIzEyMTkyMDtcbiR3aGl0ZTogI2ZmZmZmZjtcbiRzbGF0ZS1ncmF5OiAjNzY4Mjk4O1xuJGN1cmlvdXMtYmx1ZTogIzM0QUFERDtcbiRhcXVhSXNsYW5kOiAjQTdDQ0RDO1xuJGNlcmlzZS1yZWQ6ICNEQzJDNTM7XG4kdGFwZXN0cnk6ICNBNzUwN0I7XG4kaGVhdGhlcjogI0JCQzRENjtcbiRhbGFiYXN0ZXI6ICNGQUZBRkE7XG4kdHVuYTogIzNBM0E0MztcbiRtaW5lLXNoYWZ0OiAjM0MzQzNDO1xuJHdpbGRCbHVlWW9uZGVyOiAjNjY4MEFFO1xuJGF0aGVuc0dyYXk6ICNFQkVCRjE7XG4kdHVuZG9yYTogIzRCNEI0QjtcbiRqZXRTdHJlYW06ICNBRkQyQzg7XG5cbiRjb2xvci10ZXh0OiAkYnVua2VyO1xuJGNvbG9yLWJhY2tncm91bmQ6ICRhbGFiYXN0ZXI7XG5cblxuLyoqXG4qIEZvbnRzXG4qL1xuXG4kZm9udC1zaXplLWJhc2U6IDE2cHg7IC8vP1xuXG4kZm9udC1wYXRoOiBcInB1YmxpYy9mb250c1wiO1xuJGZvbnQtZmFtaWx5LWN1c3RvbTogXCJSb2JvdG9cIjtcbiRmb250LWZhbWlseS1kZWZhdWx0OiBzYW5zLXNlcmlmO1xuJGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktY3VzdG9tLCAkZm9udC1mYW1pbHktZGVmYXVsdDtcblxuJGZvbnQtc2l6ZS1odWdlOiAzNnB4O1xuJGZvbnQtc2l6ZS1sYXJnZTogMzBweDtcbiRmb250LXNpemUtbWVkaXVtOiAyNHB4O1xuJGZvbnQtc2l6ZS1zbWFsbDogMjBweDtcbiRmb250LXNpemUteFNtYWxsOiAxOHB4O1xuJGZvbnQtc2l6ZS14eFNtYWxsOiAxNnB4O1xuJGZvbnQtc2l6ZS10aW55OiAxNHB4O1xuXG4kZm9udC13ZWlnaHQtbWVkaXVtOiA1MDA7XG4kZm9udC13ZWlnaHQtcmVndWxhcjogNDAwO1xuXG4kbGluZS1oZWlnaHQtaHVnZTogMTY3JTtcbiRsaW5lLWhlaWdodC1sYXJnZTogMTYwJTtcbiRsaW5lLWhlaWdodC1tZWRpdW06IDE0MCU7XG4kbGluZS1oZWlnaHQtc21hbGw6IDEzMCU7XG4kbGluZS1oZWlnaHQteFNtYWxsOiAxMjclO1xuJGxpbmUtaGVpZ2h0LXRpbnk6IDEyMCU7XG5cbi8qKlxuKiBCcmVha3BvaW50c1xuKi9cbi8vINCf0YDQuNC80LXRgCDRg9C60LDQt9Cw0L3QuNGPINC80LXQtNC40LDQt9Cw0L/RgNC+0YHQvtCyLCDQt9Cw0YLQtdC8INC80L7QttC90L4g0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGMINC10LUg0LrQsNC6ICdAbWVkaWEgI3skc2NyZWVuLW1lZGl1bX0gey4uLn0nXG4kc2NyZWVuLWRlc2t0b3A6IFwiKG1pbi13aWR0aDogMTQ0MHB4KVwiO1xuJHNjcmVlbi10YWJsZXQ6IFwiKG1pbi13aWR0aDogNzY4cHgpXCI7XG5cblxuLyoqXG4qIExheW91dFxuKi9cbiR3aWR0aC1jb250YWluZXI6IDEyNDBweDtcbiRnYXAtY29udGFpbmVyOiAyMHB4O1xuXG4kZ2FwLWl0ZW1zOiByZW0oMzJweCk7XG5cbi8qKlxuKiBTaXplc1xuKi9cblxuJGhlaWdodC1oZWFkZXItbW9iaWxlOiAxMDVweDtcbiRoZWlnaHQtaGVhZGVyLWRlc2t0b3A6IDgwcHg7XG5cbi8vICRoZWlnaHQtZm9vdGVyLW1vYmlsZTogMjc0cHg7XG4kaGVpZ2h0LWZvb3Rlci1kZXNrdG9wOiAxMDJweDtcblxuJHdpZHRoLXNpZGViYXI6IHJlbSgyODZweCk7XG5cbi8qKlxuKiBUcmFuc2l0aW9ucyBhbmQgQW5pbWF0aW9uc1xuKi9cblxuJHRyYW5zaXRpb24tZHVyYXRpb246IC4zcztcbiR0cmFuc2l0aW9uLWR1cmF0aW9uLWZhc3Q6IC4xcztcbiR0cmFuc2l0aW9uLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcblxuLyoqXG4qIFJhZGl1c1xuKi9cblxuJGJvcmRlci1yYWRpdXM6IDhweDtcbiRib3JkZXItcmFkaXVzLXNtYWxsOiA1cHg7XG5cbi8qKlxuKiBCb3gtc2hhZG93c1xuKi9cblxuXG5cbi8qKlxuKiBaLWluZGV4ZXNcbiovXG5cbiR6LWluZGV4LWhlYWRlcjogMTAwO1xuJHotaW5kZXgtY2FyZC1pbWc6IDU7XG4kei1pbmRleC1jYXJkLWJveC1zaGFkb3c6IDEwO1xuJHotaW5kZXgtY2FyZC10ZXh0OiAxNTtcblxuIiwiKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG4gICAgJjo6YmVmb3JlLFxuICAgICY6OmFmdGVyIHtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB9XG59XG5cbmh0bWwge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XG4gICAgZm9udC1zaXplOiAxMDAlO1xuXG4gICAgY29sb3I6ICRjb2xvci10ZXh0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1iYWNrZ3JvdW5kO1xufVxuXG5ib2R5IHtcbiAgICAkZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2U7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1yZWd1bGFyO1xuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbmgxIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBmb250LXNpemU6ICRmb250LXNpemUtbGFyZ2U7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1zbWFsbDtcblxuICAgIGNvbG9yOiAkYnVua2VyO1xuXG4gICAgJjpub3QoW2NsYXNzXSkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTBweCk7XG4gICAgfVxuXG4gICAgQG1lZGlhICgkc2NyZWVuLXRhYmxldCkge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtaHVnZTtcbiAgICB9XG59XG5cbmgyIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBmb250LXNpemU6ICRmb250LXNpemUtbGFyZ2U7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1zbWFsbDtcblxuICAgIGNvbG9yOiAkYnVua2VyO1xuXG4gICAgJjpub3QoW2NsYXNzXSkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTBweCk7XG4gICAgfVxuXG4gICAgQG1lZGlhICgkc2NyZWVuLXRhYmxldCkge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtbGFyZ2U7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtdGlueTtcbiAgICB9XG59XG5cbmgzIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBmb250LXNpemU6ICRmb250LXNpemUtc21hbGw7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC10aW55O1xuXG4gICAgY29sb3I6ICRtaW5lLXNoYWZ0O1xuXG4gICAgJjpub3QoW2NsYXNzXSkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTBweCk7XG4gICAgfVxuXG4gICAgQG1lZGlhICgkc2NyZWVuLXRhYmxldCkge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtbWVkaXVtO1xuICAgICAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LXNtYWxsO1xuICAgIH1cbn1cblxucCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLXRpbnk7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1yZWd1bGFyO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtaHVnZTtcblxuICAgICY6bm90KFtjbGFzc10pIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDEwcHgpO1xuICAgIH1cblxuICAgIEBtZWRpYSAoJHNjcmVlbi10YWJsZXQpIHtcbiAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXh4U21hbGw7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtaHVnZTtcbiAgICB9XG59XG5cblxub2wge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgY291bnRlci1yZXNldDogbGk7XG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLXRpbnk7XG5cbiAgICAmOm5vdChbY2xhc3NdKSB7XG4gICAgICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAyMHB4O1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cbiAgICBcbiAgICAmIGxpIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IHJlbSgxNnB4KTtcbiAgICAgICAgY291bnRlci1pbmNyZW1lbnQ6IGxpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTBweCk7XG4gICAgICAgIHBhZGRpbmctbGVmdDogcmVtKDEwcHgpO1xuXG5cbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IGNvdW50ZXJzKGxpLCBcIi5cIikgXCIuXCI7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgxMHB4KTtcbiAgICAgICAgICAgIGNvbG9yOiAkY2VyaXNlLXJlZDtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIHdpZHRoOiAxZW07XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgKCRzY3JlZW4tdGFibGV0KSB7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogcmVtKDE5cHgpO1xuICAgICAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXh4U21hbGw7XG4gICAgICAgIH1cbiAgICB9ICBcbn1cblxuXG51bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtdGlueTtcblxuICAgIG1hcmdpbi1ibG9jay1zdGFydDogMDtcbiAgICBtYXJnaW4tYmxvY2stZW5kOiAwO1xuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xuXG4gICAgJjpub3QoW2NsYXNzXSkge1xuICAgICAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMjBweDtcbiAgICBcbiAgICAgICAgJiBsaSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogcmVtKDE2cHgpO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDEwcHgpO1xuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDogcmVtKDVweCk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiByZW0oNXB4KTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgxMHB4KTtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNlcmlzZS1yZWQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEBtZWRpYSAoJHNjcmVlbi10YWJsZXQpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUteHhTbWFsbDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogcmVtKDE5cHgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9ICBcbiAgICB9XG59XG5cbmJsb2NrcXVvdGUge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiByZW0oMjBweCkgcmVtKDI1cHgpO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICRjZXJpc2UtcmVkO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRhbGFiYXN0ZXI7XG4gICAgXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLXRpbnk7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1yZWd1bGFyO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtaHVnZTtcblxuICAgIEBtZWRpYSAoJHNjcmVlbi10YWJsZXQpIHtcbiAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXh4U21hbGw7XG4gICAgfVxufVxuXG5hIHtcbiAgICAmOm5vdChbY2xhc3NdKSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1yZWd1bGFyO1xuICAgICAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWh1Z2U7XG4gICAgICAgIGNvbG9yOiAkY3VyaW91cy1ibHVlO1xuICAgICAgICBcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6dmlzaXRlZCB7XG4gICAgICAgICAgICBjb2xvcjogJGFxdWFJc2xhbmQ7XG4gICAgICAgIH1cbiAgICB9ICAgXG59XG5cbmltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG59IiwiQGZ1bmN0aW9uIHJlbSgkcGl4ZWxzLCAkY29udGV4dDogJGZvbnQtc2l6ZS1iYXNlKSB7XG4gICAgQGlmICh1bml0bGVzcygkcGl4ZWxzKSkge1xuICAgICAgICAkcGl4ZWxzOiAkcGl4ZWxzICogMXB4O1xuICAgIH1cbiAgXG4gICAgQGlmICh1bml0bGVzcygkY29udGV4dCkpIHtcbiAgICAgICAgJGNvbnRleHQ6ICRjb250ZXh0ICogMXB4O1xuICAgIH1cbiAgXG4gICAgQHJldHVybiAkcGl4ZWxzIC8gJGNvbnRleHQgKiAxcmVtO1xufSAvL2h0bWwg0LjRgdC/0L7Qu9GM0LfRg9C10YLRgdGPINCy0YHQtdCz0LTQsCFcbiAgXG5AZnVuY3Rpb24gZW0oJHBpeGVscywgJGNvbnRleHQ6ICRmb250LXNpemUtYmFzZSkge1xuICAgIEBpZiAodW5pdGxlc3MoJHBpeGVscykpIHtcbiAgICAgICAgJHBpeGVsczogJHBpeGVscyAqIDFweDtcbiAgICB9XG5cbiAgICBAaWYgKHVuaXRsZXNzKCRjb250ZXh0KSkge1xuICAgICAgICAkY29udGV4dDogJGNvbnRleHQgKiAxcHg7XG4gICAgfVxuXG4gICAgQHJldHVybiAkcGl4ZWxzIC8gJGNvbnRleHQgKiAxZW07XG59IC8v0L7RgtC90L7RgdC40YLQtdC70YzQvdC+INGD0L3QsNGB0LvQtdC00L7QstCw0L3QvdC+0LPQvlxuIiwiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiByZW0oJHdpZHRoLWNvbnRhaW5lciArIDIgKiAkZ2FwLWNvbnRhaW5lcik7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvOyAvL9GG0LXQvdGC0YDQuNGA0L7QstCw0L3QuNC1XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87IC8v0YbQtdC90YLRgNC40YDQvtCy0LDQvdC40LVcbiAgICBwYWRkaW5nLXJpZ2h0OiByZW0oJGdhcC1jb250YWluZXIpO1xuICAgIHBhZGRpbmctbGVmdDogcmVtKCRnYXAtY29udGFpbmVyKTtcbn0iLCIuaGVhZGVyIHtcbiAgICBoZWlnaHQ6IHJlbSgkaGVpZ2h0LWhlYWRlci1tb2JpbGUpO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuXG4gICAgYm94LXNoYWRvdzogMHB4IDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG5cbiAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICBoZWlnaHQ6IHJlbSgkaGVpZ2h0LWhlYWRlci1kZXNrdG9wKTtcbiAgICB9XG5cbiAgICAmX19yb3cge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuXG4gICAgJl9fY29sIHtcbiAgICAgICAgJi0tbG9nbyB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg1MHB4KTtcblxuICAgICAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg2MXB4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYtLXNlYXJjaCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IHJlbSg2NXB4KTtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgdG9wOiAwO1xuXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oNjFweCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLS1wcm9maWxlIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiByZW0oMjBweCk7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogcmVtKDIwcHgpO1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oMTlweCk7XG5cbiAgICAgICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fSB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IHJlbSgxcHgpIHNvbGlkICRhdGhlbnNHcmF5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fbG9nbyB7XG4gICAgICAgIHdpZHRoOiByZW0oMTM1cHgpO1xuICAgICAgICBoZWlnaHQ6IHJlbSgzMHB4KTtcbiAgICB9XG59IiwiLmZvb3RlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuICAgIGJveC1zaGFkb3c6IDBweCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuXG4gICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgaGVpZ2h0OiByZW0oJGhlaWdodC1mb290ZXItZGVza3RvcCk7XG4gICAgfVxuXG4gICAgJl9fcm93IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb2wge1xuICAgICAgICAmLS1zb2NpYWwge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nOiByZW0oMjBweCkgMDtcblxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRoZWF0aGVyO1xuXG4gICAgICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IHJlbSg0MHB4KTtcblxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH0ge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogcmVtKDQwcHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogcmVtKDIwcHgpIDA7XG5cbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkaGVhdGhlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYtLWRvY3Mge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nOiByZW0oMjBweCkgMDtcblxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRoZWF0aGVyO1xuXG4gICAgICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH0ge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiByZW0oNDBweCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLS1sb2dvIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IHJlbSgyMHB4KSAwO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLnBhZ2Uge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuXG4gICAgJl9faGVhZGVyIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB6LWluZGV4OiAkei1pbmRleC1oZWFkZXI7IC8vMTAwXG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7Ly8g0YDQsNGB0YHRgtGP0LPQuNCy0LDQtdC8INC90LAg0LLRgdGOINGI0LjRgNC40L3Rg1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBmbGV4LXNocmluazogMDsvLyDRh9GC0L7QsdGLINC90LUg0YHQttC40LzQsNC70YHRjyDQv9GA0Lgg0YPQstC10LvQuNGH0LXQvdC40Lgg0LTQu9C40L3RiyDQutC+0L3RgtC10L3RgtCwXG4gICAgfVxuXG4gICAgJl9fY29udGVudCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGZsZXgtZ3JvdzogMTsgLy/RgNCw0YHRgtGP0LPQuNCy0LDQtdGC0YHRjyDQvdCwINCy0YHRjiDQtNC+0YHRg9C/0L3Rg9GOINC00LvQuNC90YNcblxuICAgICAgICBtYXJnaW4tdG9wOiByZW0oJGhlaWdodC1oZWFkZXItbW9iaWxlKTtcbiAgICAgICAgcGFkZGluZy10b3A6IHJlbSg0MHB4KTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206cmVtKDEwMHB4KTtcblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogcmVtKCRoZWlnaHQtaGVhZGVyLWRlc2t0b3ApO1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IHJlbSg1MHB4KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2Zvb3RlciB7XG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIH1cbn1cbiIsIi5pdGVtcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgZ2FwOiAkZ2FwLWl0ZW1zO1xuICAgIH1cblxuICAgICZfX3NpZGViYXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgd2lkdGg6ICR3aWR0aC1zaWRlYmFyO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fbWFpbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgZmxleDogYXV0bztcbiAgICAgICAgfVxuICAgIH1cblxufSIsIi5idXR0b24ge1xuXG4gICAgJHNpemUtbm9ybWFsbDogNTBweDsgLy8g0J7RgdC90L7QstC90L7QuSDRgdGC0LjQu9GMXG4gICAgJHNpemUtbWVkaXVtOiA0MHB4O1xuICAgICRzaXplLXNtYWxsOiAyOXB4O1xuICAgICRzaXplLW1pbmk6IDI0cHg7XG5cbiAgICBAaW5jbHVkZSB0ZXh0LXRpbnk7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgaGVpZ2h0OiByZW0oJHNpemUtbm9ybWFsbCk7XG4gICAgcGFkZGluZzogMCByZW0oMjBweCk7XG5cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogcmVtKDVweCk7XG4gICAgYm9yZGVyOiBub25lO1xuXG4gICAgdHJhbnNpdGlvbjogY29sb3IgLjJzIGxpbmVhcjtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4ycyBsaW5lYXI7XG5cbiAgICAmLS1tZWRpdW0ge1xuICAgICAgICBoZWlnaHQ6ICRzaXplLW1lZGl1bTtcbiAgICB9XG5cbiAgICAmLS1zbWFsbCB7XG4gICAgICAgIGhlaWdodDogJHNpemUtc21hbGw7XG4gICAgfVxuXG4gICAgJi0tc3F1YXJlZCB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IHJlbSg1cHgpIDAgMCAwO1xuICAgIH1cblxuICAgICYtLWNvbG9yIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogJGN1cmlvdXMtYmx1ZTtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR3aWxkQmx1ZVlvbmRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR3aWxkQmx1ZVlvbmRlcjtcbiAgICAgICAgICAgIG9wYWNpdHk6IC41O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi0tbm9Db2xvciB7XG4gICAgICAgIGNvbG9yOiAkY3VyaW91cy1ibHVlO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogJHdpbGRCbHVlWW9uZGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgY29sb3I6ICR3aWxkQmx1ZVlvbmRlcjtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtLXNpbXBsZSB7IC8vINGB0YLQuNC70Ywg0LTQu9GPINC60L3QvtC/0LrQuFxuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIGNvbG9yOiAkY3VyaW91cy1ibHVlO1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXG4gICAgICAgICZfX3RleHQge1xuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogJHdpbGRCbHVlWW9uZGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgY29sb3I6ICR3aWxkQmx1ZVlvbmRlcjtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtLWNvbG9yI3smfS0tZGlzYWJsZWQge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkYXRoZW5zR3JheTtcbiAgICB9XG5cbiAgICAmLS1ub0NvbG9yI3smfS0tZGlzYWJsZWQge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgfVxuXG4gICAgJi0tZGlzYWJsZWQge1xuICAgICAgICBjb2xvcjogJGhlYXRoZXI7XG4gICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtLWljb25lZCN7Jn0tLXRhYkljb24geyAvLyDQsdC70L7QuiDQsiDQstC40LTQtSDQuNC60L7QvdC60LhcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGNvbG9yOiAkaGVhdGhlcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cbiAgICAgICAgLmJ1dHRvbl9faWNvbi0tdGFiIHtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRzbGF0ZS1ncmF5O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgLjJzIGxpbmVhcjtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjJzIGxpbmVhcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LW1lZGl1bTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDEwcHgpO1xuICAgICAgICBtYXJnaW4tbGVmdDogcmVtKDEwcHgpO1xuICAgIH1cblxuICAgICZfX2ljb24geyAvLyDRgdGC0LjQu9C40LfQsNGG0LjRjyDQuNC60L7QvdC60Lgg0LIg0LrQvdC+0L/QutC1INGBINC40LrQvtC90LrQvtC5XG4gICAgICAgIGhlaWdodDogcmVtKDEwcHgpO1xuICAgICAgICB3aWR0aDogcmVtKDEwcHgpO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICAgICYtLW1lZGl1bSB7XG4gICAgICAgICAgICBoZWlnaHQ6IHJlbSgxNnB4KTtcbiAgICAgICAgICAgIHdpZHRoOiByZW0oMTZweCk7XG4gICAgICAgIH1cblxuICAgICAgICAmLS1ncmF5IHtcbiAgICAgICAgICAgIGNvbG9yOiAkc2xhdGUtZ3JheTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIkBtaXhpbiBvYmplY3QtZml0KCRmaXQ6IGZpbGwsICRwb3NpdGlvbjogbnVsbCkge1xuICAgIC1vLW9iamVjdC1maXQ6ICRmaXQ7XG4gICAgb2JqZWN0LWZpdDogJGZpdDtcblxuICAgIEBpZiAkcG9zaXRpb24ge1xuICAgICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiAjeyRmaXR9OyBvYmplY3QtcG9zaXRpb246ICN7JHBvc2l0aW9ufVwiO1xuXG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogJHBvc2l0aW9uO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246ICRwb3NpdGlvbjtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogI3skZml0fVwiO1xuICAgIH1cbn1cblxuQG1peGluIHRleHQtaHVnZSgpIHsgLy8g0JfQsNCz0L7Qu9C+0LLQvtC6INGB0YLRgNCw0L3QuNGG0YtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtbGFyZ2U7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1zbWFsbDtcblxuICAgIEBtZWRpYSAoJHNjcmVlbi10YWJsZXQpIHtcbiAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLWh1Z2U7XG4gICAgfVxufVxuXG5AbWl4aW4gdGV4dC1sYXJnZSgpIHsgLy8g0JfQsNCz0L7Qu9C+0LLQvtC6INC90L7QstC+0YHRgtC4XG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLWxhcmdlO1xuICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbWVkaXVtO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtc21hbGw7XG5cbiAgICBAbWVkaWEgKCRzY3JlZW4tdGFibGV0KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1sYXJnZTtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC10aW55O1xuICAgIH1cbn1cblxuQG1peGluIHRleHQtbWVkaXVtKCkgeyAvLyDQl9Cw0LPQvtC70L7QstC+0Log0YLRgNC10YLRjNC10LPQviDRg9GA0L7QstC90Y9cbiAgICBmb250LXNpemU6ICRmb250LXNpemUtc21hbGw7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC10aW55O1xuXG4gICAgQG1lZGlhICgkc2NyZWVuLXRhYmxldCkge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtbWVkaXVtO1xuICAgICAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LXNtYWxsO1xuICAgIH1cbn1cblxuQG1peGluIHRleHQtc21hbGwoKSB7IC8vINCi0LXQutGB0YJcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtdGlueTtcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LXJlZ3VsYXI7XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1odWdlO1xuXG4gICAgQG1lZGlhICgkc2NyZWVuLXRhYmxldCkge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUteHhTbWFsbDtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1odWdlO1xuICAgIH1cbn1cblxuQG1peGluIHRleHQtdGlueSgpIHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtdGlueTtcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LXRpbnk7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG59XG5cblxuXG5cblxuLy8gQG1peGluIGJsb2NrIHtcbi8vICAgICB3aWR0aDogcmVtKDUwMHB4KTtcbi8vICAgICBoZWlnaHQ6IHJlbSgzMDBweCk7XG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJHRhcGVzdHJ5O1xuLy8gfVxuXG5cblxuXG5cbiIsIi5pY29uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn1cbiIsIi5oZWFkaW5nIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgY29sb3I6ICRidW5rZXI7XG5cbiAgICAmLS1odWdlIHtcbiAgICAgICAgQGluY2x1ZGUgdGV4dC1odWdlO1xuICAgIH1cblxuICAgICYtLWxhcmdlIHtcbiAgICAgICAgQGluY2x1ZGUgdGV4dC1sYXJnZTtcbiAgICB9XG5cbiAgICAmLS1tZWRpdW0ge1xuICAgICAgICBAaW5jbHVkZSB0ZXh0LW1lZGl1bTtcbiAgICAgICAgY29sb3I6ICRtaW5lLXNoYWZ0O1xuICAgIH1cbn1cbiIsIi5pbnB1dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJGhlaWdodC1pbnB1dDogNTBweDtcbiAgICAkaGVpZ2h0LWlucHV0LXNtYWxsOiA0MHB4O1xuXG4gICAgJi0tdGV4dGFyZWEgJiB7XG4gICAgICAgICZfX2NvbnRyb2wge1xuICAgICAgICAgICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xuICAgICAgICAgICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuXG4gICAgICAgICAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XG5cbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1sYXJnZTtcblxuICAgICAgICAgICAgaGVpZ2h0OiByZW0oMTAwcHgpO1xuICAgICAgICAgICAgcGFkZGluZzogcmVtKDE3cHgpIHJlbSgyMHB4KTtcblxuICAgICAgICAgICAgcmVzaXplOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi0tc21hbGwgJiB7XG4gICAgICAgICZfX2NvbnRyb2wge1xuICAgICAgICAgICAgaGVpZ2h0OiAkaGVpZ2h0LWlucHV0LXNtYWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi0tYnV0dG9uZWQgJiB7XG4gICAgICAgICZfX2NvbnRyb2wge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oNDlweCk7XG5cbiAgICAgICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oMzlweClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtLXNlYXJjaCAmIHtcbiAgICAgICAgJl9fYnV0dG9uIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgbGVmdDogcmVtKDIwcHgpO1xuXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG5cbiAgICAgICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fSB7XG4gICAgICAgICAgICAgICAgbGVmdDogcmVtKDEwcHgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19jb250cm9sIHtcbiAgICAgICAgICAgIGJvcmRlcjogcmVtKDFweCkgc29saWQgJGF0aGVuc0dyYXk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250cm9sIHtcbiAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXRpbnk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtbGFyZ2U7XG5cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogcmVtKCRoZWlnaHQtaW5wdXQpO1xuICAgICAgICBwYWRkaW5nOiAwIHJlbSgyMHB4KTtcblxuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAuMnMgbGluZWFyO1xuXG4gICAgICAgIGJvcmRlcjogcmVtKDFweCkgc29saWQgJGF0aGVuc0dyYXk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IHJlbSg1cHgpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG5cbiAgICAgICAgJjo6cGxhY2Vob2xkZXIgeyAvKiBDaHJvbWUsIEZpcmVmb3gsIE9wZXJhLCBTYWZhcmkgMTAuMSsgKi9cbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS10aW55O1xuXG4gICAgICAgICAgICBjb2xvcjogJGhlYXRoZXI7XG4gICAgICAgICAgICBvcGFjaXR5OiAxOyAvKiBGaXJlZm94ICovXG4gICAgICAgIH1cblxuICAgICAgICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIEludGVybmV0IEV4cGxvcmVyIDEwLTExICovXG4gICAgICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtdGlueTtcblxuICAgICAgICAgICAgY29sb3I6ICRoZWF0aGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogTWljcm9zb2Z0IEVkZ2UgKi9cbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS10aW55O1xuXG4gICAgICAgICAgICBjb2xvcjogJGhlYXRoZXI7XG4gICAgICAgIH1cblxuICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHNsYXRlLWdyYXk7XG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpkaXNhYmxlZCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYXRoZW5zR3JheTtcbiAgICAgICAgfVxuXG4gICAgICAgICYtLWVycm9yIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDEwcHgpO1xuXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRjZXJpc2UtcmVkO1xuXG4gICAgICAgICAgICBjb2xvcjogJGNlcmlzZS1yZWQ7XG5cbiAgICAgICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJGNlcmlzZS1yZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLWVycm9yIHtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtbGFyZ2U7XG5cbiAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuIiwiLmxvZ28ge1xuICAgICYtLXNtYWxsIHtcbiAgICAgICAgd2lkdGg6IDkzLjQycHg7XG4gICAgICAgIGhlaWdodDogMTguMXB4O1xuXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH0ge1xuICAgICAgICAgICAgd2lkdGg6IDEzNS4wNHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzMC4zMnB4O1xuICAgICAgICB9XG4gICAgfVxufSIsIi5wcm9maWxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmX19ibG9jayB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiByaWdodDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2ljb24ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgd2lkdGg6IHJlbSgyNHB4KTtcbiAgICAgICAgaGVpZ2h0OiByZW0oMjRweCk7XG5cbiAgICAgICAgZmlsbDogJGN1cmlvdXMtYmx1ZTtcblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX25hbWUge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtdGlueTtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC10aW55O1xuXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDEwcHgpO1xuXG4gICAgICAgIGNvbG9yOiAkc2xhdGUtZ3JheTtcbiAgICB9XG5cbiAgICAmX19hdmF0YXIge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgICB3aWR0aDogcmVtKDQwcHgpO1xuICAgICAgICBoZWlnaHQ6IHJlbSg0MHB4KTtcbiAgICB9XG5cbiAgICAmX19saW5rIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxufVxuXG4iLCIuc29jaWFsIHtcbiAgICAmX19saXN0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogbGVmdDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgyM3B4KTtcblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9faWNvbiA+ICZfX2ljb24tcGljIHtcbiAgICAgICAgZmlsbDogJGhlYXRoZXI7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBmaWxsOiAkc2xhdGUtZ3JheTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGZpbGwgLjNzIGxpbmVhcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2ljb24tcGljIHtcbiAgICAgICAgd2lkdGg6IHJlbSg0MHB4KTtcbiAgICAgICAgaGVpZ2h0OiByZW0oNDBweCk7XG4gICAgfVxufSIsIi5kb2NzIHtcbiAgICAmX19saXN0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMjBweCk7XG5cbiAgICAgICAgY29sb3I6ICRjdXJpb3VzLWJsdWU7XG5cbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXRpbnk7XG5cbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDMwcHgpO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIuY2FyZHMge1xuICAgICZfX2xpc3Qge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgICAgICAgbWFyZ2luLXRvcDogcmVtKDIwcHgpO1xuXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fSB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgtMTBweCk7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogcmVtKC0xMHB4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH0ge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogcmVtKC0zMHB4KTtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogcmVtKC0xNnB4KTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiByZW0oLTE2cHgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW4tdG9wOiByZW0oMjBweCk7XG5cbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9IHtcbiAgICAgICAgICAgIHdpZHRoOiBwZXJjZW50YWdlKDEgLyAyKTtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IHJlbSgxMHB4KTtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogcmVtKDEwcHgpO1xuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi1kZXNrdG9wfSB7XG4gICAgICAgICAgICB3aWR0aDogcGVyY2VudGFnZSgxIC8gMyk7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiByZW0oMzBweCk7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiByZW0oMTZweCk7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IHJlbSgxNnB4KTtcbiAgICAgICAgfVxuXG4gICAgICAgICYtLWJpZyB7XG4gICAgICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogcGVyY2VudGFnZSgyIC8gMyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIuY2FyZCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIGhlaWdodDogcmVtKDM1MnB4KTtcblxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDBweCAxMnB4IDQwcHggcmdiYSgwLCAwLCAwLCAwLjAzKSkgZHJvcC1zaGFkb3coMHB4IDNweCAxMHB4IHJnYmEoMTY0LCAxNjQsIDE2NCwgMC4wMykpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgY29sb3I6ICRjdXJpb3VzLWJsdWU7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMTJweCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4wMyksIDAgM3B4IDEwcHggcmdiYSgxNjQsIDE2NCwgMTY0LCAwLjAzKTtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHAge1xuICAgICAgICBjb2xvcjogJGN1cmlvdXMtYmx1ZTtcbiAgICB9XG5cbiAgICAmX19pbWFnZSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTBweCk7XG5cbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICAgICAgICAkY2FyZC13aWR0aDogMzM1cHg7XG4gICAgICAgICAgICAkY2FyZC1oZWlnaHQ6IDE1OXB4O1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IHBlcmNlbnRhZ2UoJGNhcmQtaGVpZ2h0IC8gJGNhcmQtd2lkdGgpO1xuXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuXG4gICAgICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgICAgICRjYXJkLXdpZHRoOiAzNTRweDtcbiAgICAgICAgICAgICAgICAkY2FyZC1oZWlnaHQ6IDE1OXB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiBwZXJjZW50YWdlKCRjYXJkLWhlaWdodCAvICRjYXJkLXdpZHRoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgQG1lZGlhICN7JHNjcmVlbi1kZXNrdG9wfSB7XG4gICAgICAgICAgICAgICAgJGNhcmQtd2lkdGg6IDM5MnB4O1xuICAgICAgICAgICAgICAgICRjYXJkLWhlaWdodDogMTU5cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IHBlcmNlbnRhZ2UoJGNhcmQtaGVpZ2h0IC8gJGNhcmQtd2lkdGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi1waWMge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3ZlclwiO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICAmX19ib3gge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMjBweCk7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiByZW0oMjBweCk7XG4gICAgfVxuXG4gICAgJl9fZm9vdGVyIHtcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTJweCk7XG5cbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB6LWluZGV4OiAkei1pbmRleC1jYXJkLXRleHQ7XG5cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgICAgICRmb290ZXItaGVpZ2h0OiByZW0oNjRweCk7XG4gICAgICAgIGhlaWdodDogJGZvb3Rlci1oZWlnaHQ7XG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiByZW0oMjBweCk7XG4gICAgICAgIHBhZGRpbmctbGVmdDogcmVtKDIwcHgpO1xuXG4gICAgICAgIGNvbG9yOiAkc2xhdGUtZ3JheTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuXG4gICAgICAgICYtLWJpZyB7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9faGVhZGluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS14eFNtYWxsO1xuICAgICAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LW1lZGl1bTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IHJlbSgyNHB4KTtcblxuICAgICAgICB6LWluZGV4OiAkei1pbmRleC1jYXJkLXRleHQ7XG5cbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgxMHB4KTtcblxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH0ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXhTbWFsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB6LWluZGV4OiAkei1pbmRleC1jYXJkLXRleHQ7XG5cbiAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXRpbnk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiByZW0oMjFweCk7XG5cbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBtYXgtaGVpZ2h0OiByZW0oODVweCk7XG4gICAgICAgIG1hcmdpbjogMDtcblxuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICBjb2xvcjogJHNsYXRlLWdyYXk7XG4gICAgfVxuXG4gICAgJi0tYmlnICYge1xuICAgICAgICAmX19pbWFnZSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cblxuICAgICAgICAmX19jb250ZW50IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fZm9vdGVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi0tYmlnIHtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIHotaW5kZXg6ICR6LWluZGV4LWNhcmQtYm94LXNoYWRvdztcblxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG5cbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNztcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMjE5MjA7XG4gICAgICAgIH1cblxuICAgICAgICBwIHtcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMnMgbGluZWFyO1xuXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMC45O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9faWNvbiB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgei1pbmRleDogJHotaW5kZXgtY2FyZC10ZXh0O1xuXG4gICAgICAgIHdpZHRoOiByZW0oMzVweCk7XG4gICAgICAgIGhlaWdodDogcmVtKDM1cHgpO1xuICAgICAgICBwYWRkaW5nOiByZW0oNnB4KTtcblxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMHB4IDhweDtcblxuICAgICAgICAmLS1iaWcge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAmLS1iaWcgJiB7XG4gICAgICAgICAgICAmLXN0YXIge1xuICAgICAgICAgICAgICAgIGZpbGw6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIHN0cm9rZTogJHdoaXRlO1xuXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGw6ICMzNGFhZGRiYTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLXN0YXIge1xuICAgICAgICAgICAgZmlsbDogd2hpdGU7XG4gICAgICAgICAgICBzdHJva2U6ICRjdXJpb3VzLWJsdWU7XG5cbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGZpbGw6ICMzNGFhZGQ1OTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuMnMgbGluZWFyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi0tYWN0aXZlICB7XG4gICAgICAgICAgICBmaWxsOiAkY3VyaW91cy1ibHVlO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLmFjdGlvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG5cbiAgICAmX19ibG9jayB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMTJweCk7XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgICYtLWljb24ge1xuICAgICAgICAgICAgd2lkdGg6IHJlbSgxM3B4KTtcbiAgICAgICAgICAgIGhlaWdodDogcmVtKDEycHgpO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oNnB4KTtcblxuICAgICAgICAgICAgZmlsbDojYmJjNGQ2O1xuXG4gICAgICAgICAgICA6aG92ZXIge1xuICAgICAgICAgICAgICAgIGZpbGw6ICM3NjgyOTg7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjFzIGxpbmVhcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYtLW51bWJlciB7XG4gICAgICAgICAgICBmb250LXNpemU6IHJlbSgxMnB4KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi50YWJzIHtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbiAkdHJhbnNpdGlvbi1mdW5jdGlvbjtcblxuICAgICYtLWJsdWUgJiB7XG4gICAgICAgICZfX2l0ZW0ge1xuICAgICAgICAgICAgY29sb3I6ICRjdXJpb3VzLWJsdWU7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiByZW0oNHB4KTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhdGhlbnNHcmF5O1xuXG4gICAgICAgICAgICAmLS1hY3RpdmUge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGN1cmlvdXMtYmx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtLXJlZCAmIHtcbiAgICAgICAgJl9faXRlbSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDMwcHgpO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcblxuICAgICAgICAgICAgY29sb3I6ICRoZWF0aGVyO1xuXG4gICAgICAgICAgICAmLS1hY3RpdmUge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYnVua2VyO1xuXG4gICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG5cbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgYm90dG9tOiAtMjFweDtcbiAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCgtNTAlKSk7XG5cbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDRweDtcblxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IHJlbSgxMHB4KSAwO1xuXG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcDogcmVtKDRweCkgc29saWQgI0RDMkM1MztcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiByZW0oNHB4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19saXN0IHtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkaGVhdGhlcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2xpc3Qge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUteHhTbWFsbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiByZW0oMjBweCk7XG5cbiAgICAgICAgcGFkZGluZzogcmVtKDEwcHgpIHJlbSgyMHB4KTtcblxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgJiArICYge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IHJlbSgyMHB4KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2Jsb2NrIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcblxuICAgICAgICAmLS1hY3RpdmUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIuZm9ybSB7XG4gICAgJl9fZmllbGQtdGV4dCB7XG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDEycHgpO1xuICAgICAgICBjb2xvcjogJHR1bmRvcmE7XG4gICAgfVxufVxuIl19 */