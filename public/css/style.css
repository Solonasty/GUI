html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Roboto;font-weight:400;font-style:normal;src:url(/public/fonts/Roboto-Regular.woff) format("woff"),url(/public/fonts/Roboto-Regular.woff2) format("woff2")}*{-webkit-tap-highlight-color:transparent}*,:after,:before{box-sizing:border-box}html{font-family:Roboto,sans-serif;font-size:100%;color:#121920;background-color:#fafafa}body{font-weight:400;text-rendering:optimizeLegibility}h1{margin-top:0;margin-bottom:0;font-size:30px;font-weight:500;line-height:130%;color:#121920}h1:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h1{font-size:36px}}h2{margin-top:0;margin-bottom:0;font-size:30px;font-weight:500;line-height:130%;color:#121920}h2:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h2{font-size:30px;line-height:120%}}h3{margin-top:0;margin-bottom:0;font-size:20px;font-weight:500;line-height:120%;color:#3c3c3c}h3:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h3{font-size:24px;line-height:130%}}h4{margin:0}p{margin-top:0;margin-bottom:0;font-size:14px;font-weight:400;line-height:167%}p:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){p{font-size:16px;line-height:167%}}ol{list-style:none;counter-reset:li;font-size:14px}ol:not([class]){padding-inline-start:20px}ol:first-child{margin-top:10px}ol li{line-height:1rem;counter-increment:li;margin-bottom:.625rem;padding-left:.625rem}ol li:before{content:counters(li,".") ".";margin-right:.625rem;color:#dc2c53;height:100%;width:1em}@media ((min-width:768px)){ol li{line-height:1.1875rem;font-size:16px}}ul{list-style:none;font-size:14px;margin-block-start:0;margin-block-end:0;padding-inline-start:0}ul:not([class]){padding-inline-start:20px}ul:not([class]) li{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;line-height:1rem;margin-bottom:.625rem}ul:not([class]) li:before{content:"";display:inline-block;width:.3125rem;height:.3125rem;margin-right:.625rem;border-radius:50%;background-color:#dc2c53}@media ((min-width:768px)){ul:not([class]) li{font-size:16px;line-height:1.1875rem}}blockquote{margin:0;padding:1.25rem 1.5625rem;border-radius:5px;border-left:5px solid #dc2c53;background-color:#fafafa;font-size:14px;font-weight:400;line-height:167%}@media ((min-width:768px)){blockquote{font-size:16px}}a:not([class]){text-decoration:none;font-weight:400;line-height:167%;color:#34aadd}a:not([class]):hover{text-decoration:underline}a:not([class]):visited{color:#a7ccdc}img{width:100%}.container{width:100%;max-width:80rem;margin-right:auto;margin-left:auto;padding-right:1.25rem;padding-left:1.25rem}.header{height:6.5625rem;background-color:#fff;box-shadow:0 3px 10px rgba(0,0,0,.05)}@media (min-width:768px){.header{height:5rem}}.header__row{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.header__col--logo{margin-right:3.125rem}@media (min-width:768px){.header__col--logo{margin-right:3.8125rem}}.header__col--search{position:absolute;top:4.0625rem;right:0;width:100%}@media (min-width:768px){.header__col--search{position:relative;top:0;margin-right:3.8125rem}}.header__col--profile{padding-top:1.25rem;padding-bottom:1.25rem;padding-left:1.1875rem}@media (min-width:768px){.header__col--profile{border-left:.0625rem solid #ebebf1}}.header__logo{width:8.4375rem;height:1.875rem}.footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;background-color:#fff;box-shadow:0 3px 10px rgba(0,0,0,.05)}@media (min-width:768px){.footer{height:6.375rem}}.footer__row{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.footer__row{-ms-flex-direction:row;flex-direction:row}}.footer__col--social{width:100%;padding:1.25rem 0;border-bottom:1px solid #bbc4d6}@media (min-width:768px){.footer__col--social{width:auto;padding-right:2.5rem;border-bottom:none}}@media (min-width:1440px){.footer__col--social{padding:0 2.5rem 0 0;margin:1.25rem 0;border-right:1px solid #bbc4d6}}.footer__col--docs{width:100%;padding:1.25rem 0;border-bottom:1px solid #bbc4d6}@media (min-width:768px){.footer__col--docs{border-bottom:none}}@media (min-width:1440px){.footer__col--docs{margin-left:2.5rem}}.footer__col--logo{padding:1.25rem 0}.page{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100vh}.page__header{position:fixed;z-index:100;top:0;right:0;left:0;-ms-flex-negative:0;flex-shrink:0}.page__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-positive:1;flex-grow:1;margin-top:6.5625rem;padding-top:2.5rem;padding-bottom:6.25rem}@media (min-width:768px){.page__content{margin-top:5rem;padding-top:3.125rem}}.page__footer{-ms-flex-negative:0;flex-shrink:0}.items{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.items{-ms-flex-direction:row;flex-direction:row;gap:2rem}}.items__sidebar{background-color:green}@media (min-width:768px){.items__sidebar{width:17.875rem}}.items__main{background-color:#ff0}@media (min-width:768px){.items__main{-ms-flex:auto;flex:auto}}.button{font-size:14px;line-height:120%;font-weight:500;position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:3.125rem;padding:0 1.25rem;cursor:pointer;text-decoration:none;color:#fff;border-radius:.3125rem;border:none;transition:color .2s linear;transition:background-color .2s linear}.button--medium{height:40px}.button--small{height:29px}.button--squared{border-radius:.3125rem 0 0 0}.button--color{color:#fff;background:#34aadd}.button--color:hover{background:#6680ae}.button--color:active{background:#6680ae;opacity:.5}.button--noColor{color:#34aadd;background:#fff}.button--noColor:hover{color:#6680ae}.button--noColor:active{color:#6680ae;opacity:.5}.button--simple{height:auto;color:#34aadd;padding:5px;background:transparent}.button--simple__text{padding:5px}.button--simple:hover{color:#6680ae}.button--simple:active{color:#6680ae;opacity:.5}.button--color.button--disabled{background:#ebebf1}.button--noColor.button--disabled{background:#fff}.button--disabled{color:#bbc4d6;cursor:default}.button--disabled:hover{color:none}.button--iconed.button--tabIcon{display:block;height:100%;width:100%;padding:0;color:#bbc4d6;background-color:transparent}.button--iconed.button--tabIcon .button__icon--tab{margin:0 auto;height:100%;width:100%;background-color:transparent}.button--iconed.button--tabIcon:hover{color:#768298;transition:color .2s linear;transition:background-color .2s linear}.button__text{font-weight:500;display:block;margin-right:.625rem;margin-left:.625rem}.button__icon{height:.625rem;width:.625rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.button__icon--medium{height:1rem;width:1rem}.button__icon--gray{color:#768298}.icon{display:block;width:100%;height:100%}.heading{margin-top:0;margin-bottom:0;color:#121920}.heading--huge{font-size:30px;font-weight:500;line-height:130%}@media ((min-width:768px)){.heading--huge{font-size:36px}}.heading--large{font-size:30px;font-weight:500;line-height:130%}@media ((min-width:768px)){.heading--large{font-size:30px;line-height:120%}}.heading--medium{font-size:20px;font-weight:500;line-height:120%;color:#3c3c3c}@media ((min-width:768px)){.heading--medium{font-size:24px;line-height:130%}}.input{position:relative}.input--textarea .input__control{-ms-overflow-style:none;scrollbar-width:none;line-height:160%;height:6.25rem;padding:1.0625rem 1.25rem;resize:none}.input--textarea .input__control::-webkit-scrollbar{width:0;background:transparent}.input--small .input__control{height:40px}.input--buttoned .input__control{padding-left:3.0625rem}@media (min-width:768px){.input--buttoned .input__control{padding-left:2.4375rem}}.input--search .input__button{position:absolute;top:50%;left:1.25rem;transform:translateY(-50%)}@media (min-width:768px){.input--search .input__button{left:.625rem}}.input--search .input__control,.input__control{border:.0625rem solid #ebebf1}.input__control{font-size:14px;line-height:160%;display:block;width:100%;height:3.125rem;padding:0 1.25rem;transition:color .2s linear;border-radius:.3125rem;background-color:#fff;box-shadow:none}.input__control:-ms-input-placeholder{opacity:1}.input__control::placeholder{font-size:14px;color:#bbc4d6;opacity:1}.input__control:-ms-input-placeholder{font-size:14px;color:#bbc4d6}.input__control::-ms-input-placeholder{font-size:14px;color:#bbc4d6}.input__control:focus{border-color:#768298;outline:none}.input__control:disabled{background-color:#ebebf1}.input__control--error{font-size:.625rem;border-color:#dc2c53;color:#dc2c53}.input__control--error:focus{border-color:#dc2c53}.input__control-error{line-height:160%;color:transparent}.logo--small{width:93.42px;height:18.1px}@media (min-width:1440px){.logo--small{width:135.04px;height:30.32px}}.profile{position:relative}.profile__block{display:none}@media (min-width:768px){.profile__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:right;justify-content:right}}.profile__icon{position:relative;display:block;width:1.5rem;height:1.5rem;fill:#34aadd}@media (min-width:768px){.profile__icon{display:none}}.profile__name{font-size:14px;line-height:120%;margin-right:.625rem;color:#768298}.profile__avatar{display:block;width:2.5rem;height:2.5rem}.profile__link{position:absolute;top:0;left:0;right:0;display:block;width:100%;height:100%}.social__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media (min-width:768px){.social__list{-ms-flex-pack:left;justify-content:left}}.social__item{margin-bottom:0;margin-right:1.4375rem}.social__item:last-child{margin-right:0}.social__icon>.social__icon-pic{fill:#bbc4d6}.social__icon>.social__icon-pic:hover{fill:#768298;transition:fill .3s linear}.social__icon-pic{width:2.5rem;height:2.5rem}.docs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.docs__list{-ms-flex-direction:row;flex-direction:row}}.docs__item{margin-bottom:1.25rem;color:#34aadd}.docs__item:last-child{margin-bottom:0}@media (min-width:768px){.docs__item{font-size:14px;margin-right:1.875rem;margin-bottom:0}.docs__item:last-child{margin-right:0}}.cards__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:1.25rem}@media (min-width:768px){.cards__list{margin-right:-.625rem;margin-left:-.625rem}}@media (min-width:1440px){.cards__list{margin-top:-1.875rem;margin-right:-1rem;margin-left:-1rem}}.cards__item{width:100%;margin-top:1.25rem}@media (min-width:768px){.cards__item{width:50%;padding-right:.625rem;padding-left:.625rem}}@media (min-width:1440px){.cards__item{width:33.33333%;margin-top:1.875rem;padding-right:1rem;padding-left:1rem}}@media (min-width:768px){.cards__item--big{width:100%}}@media (min-width:1440px){.cards__item--big{width:66.66667%}}.card{position:relative;overflow:hidden;height:22rem;border-radius:8px;filter:drop-shadow(0 12px 40px rgba(0,0,0,.03)) drop-shadow(0 3px 10px rgba(164,164,164,.03));background-color:#fff}.card:hover{cursor:pointer;box-shadow:0 12px 40px rgba(0,0,0,.03),0 3px 10px hsla(0,0%,64.3%,.03)}.card:hover,.card:hover p{color:#34aadd}.card__image{position:relative;overflow:hidden;width:100%;margin-bottom:.625rem}.card__image:before{display:block;padding-top:47.46269%;content:""}@media (min-width:768px){.card__image:before{padding-top:44.91525%}}@media (min-width:1440px){.card__image:before{padding-top:40.56122%}}.card__image-pic{width:100%;height:100%;object-fit:cover;font-family:"object-fit: cover"}.card__box,.card__image-pic{position:absolute;top:0;right:0;bottom:0;left:0}.card__content{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;overflow:hidden;margin-right:1.25rem;margin-left:1.25rem}.card__content,.card__footer{display:-ms-flexbox;display:flex}.card__footer{font-size:.75rem;position:absolute;right:0;bottom:0;left:0;z-index:15;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:4rem;padding-top:20px;padding-right:1.25rem;padding-left:1.25rem;color:#768298;background-color:#fff}.card__footer--big{color:#fff}.card__heading{font-size:16px;font-weight:500;line-height:1.5rem;z-index:15;height:100%;margin:0 0 .625rem}@media (min-width:768px){.card__heading{font-size:18px}}.card__text{overflow:hidden;z-index:15;font-size:14px;line-height:1.3125rem;height:auto;max-height:5.3125rem;margin:0;opacity:1;color:#768298}.card--big .card__image{height:100%}.card--big .card__content{position:absolute;top:50%;color:#fff}.card--big .card__footer{background-color:transparent}.card--big:before{position:absolute;top:0;z-index:10;width:100%;height:100%;content:"";opacity:.7;background-color:#121920}.card--big p{color:#fff}.card--big:hover:before{cursor:pointer;transition:opacity .2s linear;opacity:.9}.card--big:hover p{color:#fff}.card__icon{position:absolute;top:0;right:0;z-index:15;width:2.1875rem;height:2.1875rem;padding:.375rem;background-color:#fff;border-radius:0 0 0 8px}.card__icon--big{background-color:transparent}.card__icon--big .card__icon-star{fill:transparent;stroke:#fff}.card__icon--big .card__icon-star:hover{fill:rgba(52,170,221,.7294117647058823)}.card__icon-star{fill:#fff;stroke:#34aadd}.card__icon-star:hover{fill:rgba(52,170,221,.34901960784313724);transition:.2s linear}.card__icon--active{fill:#34aadd}.actions{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.actions:last-child{margin-right:0}.actions__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-right:.75rem}.actions__item--icon{width:.8125rem;height:.75rem;margin-right:.375rem;fill:#bbc4d6}.actions__item--icon :hover{fill:#768298;transition:.1s linear}.actions__item--number{font-size:.75rem}.tabs{transition:.3s ease-in-out}.tabs--blue .tabs__item{color:#34aadd;border-radius:.25rem;background-color:#ebebf1}.tabs--blue .tabs__item--active{color:#fff;background-color:#34aadd}.tabs--red .tabs__item{position:relative;margin-right:1.875rem;padding-right:0;padding-left:0;color:#bbc4d6}.tabs--red .tabs__item--active{color:#121920}.tabs--red .tabs__item--active:after{content:"";position:absolute;bottom:-21px;left:50%;transform:translateX(-50%);width:100%;height:4px;padding:.625rem 0;border-top:.25rem solid #dc2c53;border-radius:.25rem}.tabs--red .tabs__list{border-bottom:1px solid #bbc4d6}.tabs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.tabs__item{font-size:16px;font-weight:500;line-height:1.25rem;padding:.625rem 1.25rem;cursor:pointer}.tabs__item+.tabs__item{margin-left:1.25rem}.tabs__block{display:none}.tabs__block--active{display:block}.form__field-text{font-size:.75rem;color:#4b4b4b}.info{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:17.875rem;height:9.375rem;padding-top:1rem;padding-right:1rem;padding-left:1rem;margin:0;filter:drop-shadow(0 12px 40px rgba(0,0,0,.03)) drop-shadow(0 3px 10px rgba(164,164,164,.03));border-radius:5px;background-color:#fff}.info__heading{font-size:16px;font-weight:500;line-height:1.5rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;max-width:12.875rem;margin-bottom:.625rem}.info__text{overflow:hidden;font-size:14px;font-weight:400;line-height:1.0625rem;max-height:3.1875rem}.info__buttons{display:-ms-flexbox;display:flex;-ms-flex-align:end;align-items:flex-end;-ms-flex-pack:right;justify-content:right;margin-right:-1rem}.info__icon{position:absolute;top:1rem;right:1rem;width:1.5rem;height:1.5rem}.info__icon--info{fill:#dc2c53}.info__icon--question{fill:#6680ae}.info__icon--i{fill:#34aadd}.info-block__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:left;justify-content:left}.info-block__item{margin-right:2rem}.info-block__item:last-child{margin-right:0}
/*# sourceMappingURL=data:application/json;base64, */