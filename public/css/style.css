html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Roboto;font-weight:400;font-style:normal;src:url(public/fonts/Roboto-Regular.woff) format("woff"),url(public/fonts/Roboto-Regular.woff2) format("woff2")}*{-webkit-tap-highlight-color:transparent}*,:after,:before{box-sizing:border-box}html{font-family:Roboto,sans-serif;font-size:100%;color:#121920;background-color:#fafafa}body{font-weight:400;text-rendering:optimizeLegibility}h1{margin-top:0;margin-bottom:0;font-size:30px;font-weight:500;line-height:130%;color:#121920}h1:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h1{font-size:36px}}h2{margin-top:0;margin-bottom:0;font-size:30px;font-weight:500;line-height:130%;color:#121920}h2:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h2{font-size:30px;line-height:120%}}h3{margin-top:0;margin-bottom:0;font-size:20px;font-weight:500;line-height:120%;color:#3c3c3c}h3:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){h3{font-size:24px;line-height:130%}}p{margin-top:0;margin-bottom:0;font-size:14px;font-weight:400;line-height:167%}p:not([class]){margin-bottom:.625rem}@media ((min-width:768px)){p{font-size:16px;line-height:167%}}ol{list-style:none;counter-reset:li;font-size:14px}ol:not([class]){padding-inline-start:20px}ol:first-child{margin-top:10px}ol li{line-height:1rem;counter-increment:li;margin-bottom:.625rem;padding-left:.625rem}ol li:before{content:counters(li,".") ".";margin-right:.625rem;color:#dc2c53;height:100%;width:1em}@media ((min-width:768px)){ol li{line-height:1.1875rem;font-size:16px}}ul{list-style:none;font-size:14px;margin-block-start:0;margin-block-end:0;padding-inline-start:0}ul:not([class]){padding-inline-start:20px}ul:not([class]) li{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;line-height:1rem;margin-bottom:.625rem}ul:not([class]) li:before{content:"";display:inline-block;width:.3125rem;height:.3125rem;margin-right:.625rem;border-radius:50%;background-color:#dc2c53}@media ((min-width:768px)){ul:not([class]) li{font-size:16px;line-height:1.1875rem}}blockquote{margin:0;padding:1.25rem 1.5625rem;border-radius:5px;border-left:5px solid #dc2c53;background-color:#fafafa;font-size:14px;font-weight:400;line-height:167%}@media ((min-width:768px)){blockquote{font-size:16px}}a:not([class]){text-decoration:none;font-weight:400;line-height:167%;color:#34aadd}a:not([class]):hover{text-decoration:underline}a:not([class]):visited{color:#a7ccdc}img{width:100%}.container{width:100%;max-width:80rem;margin-right:auto;margin-left:auto;padding-right:1.25rem;padding-left:1.25rem}.header{height:6.5625rem;background-color:#fff;box-shadow:0 3px 10px rgba(0,0,0,.05)}@media (min-width:768px){.header{height:5rem}}.header__row{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.header__col--logo{margin-right:3.125rem}@media (min-width:768px){.header__col--logo{margin-right:3.8125rem}}.header__col--search{width:100%;margin-right:3.125rem}@media (min-width:768px){.header__col--search{margin-right:3.8125rem}}.header__col--profile{border-left:.0625rem solid #ebebf1;padding-left:1.1875rem;padding-top:2.03125rem;padding-bottom:2.03125rem}@media (min-width:768px){.header__col--profile{padding-top:1.25rem;padding-bottom:1.25rem}}.header__logo{width:135.04px;height:30.32px}.footer{background-color:#fff;box-shadow:0 3px 10px rgba(0,0,0,.05);display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (min-width:768px){.footer{height:6.375rem}}.footer__row{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.footer__row{-ms-flex-direction:row;flex-direction:row}}.footer__col--social{width:100%;padding:1.25rem 0;border-bottom:1px solid #bbc4d6}@media (min-width:768px){.footer__col--social{width:auto;padding-right:2.5rem;border-bottom:none}}@media (min-width:1440px){.footer__col--social{padding:0 2.5rem 0 0;margin:1.25rem 0;border-right:1px solid #bbc4d6}}.footer__col--menu{width:100%;padding:1.25rem 0;border-bottom:1px solid #bbc4d6}@media (min-width:768px){.footer__col--menu{border-bottom:none}}@media (min-width:1440px){.footer__col--menu{margin-left:2.5rem}}.footer__col--logo{padding:1.25rem 0}.page{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100vh}.page__header{position:fixed;z-index:100;top:0;right:0;left:0;-ms-flex-negative:0;flex-shrink:0}.page__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-positive:1;flex-grow:1;margin-top:6.5625rem;padding-top:2.5rem;padding-bottom:6.25rem}@media (min-width:768px){.page__content{margin-top:5rem;padding-top:3.125rem}}.page__footer{-ms-flex-negative:0;flex-shrink:0}.items{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.items{-ms-flex-direction:row;flex-direction:row;gap:2rem}}.items__sidebar{background-color:green}@media (min-width:768px){.items__sidebar{width:17.875rem}}.items__main{background-color:#ff0}@media (min-width:768px){.items__main{-ms-flex:auto;flex:auto}}.button{font-size:14px;line-height:120%;font-weight:500;position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:3.125rem;padding:0 1.25rem;cursor:pointer;text-decoration:none;color:#fff;border-radius:.3125rem;border:none;transition:color .2s linear;transition:background-color .2s linear}.button--medium{height:40px}.button--small{height:29px}.button--squared{border-radius:.3125rem 0 0 0}.button--color{color:#fff;background:#34aadd}.button--color:hover{background:#6680ae}.button--color:active{background:#6680ae;opacity:.5}.button--noColor{color:#34aadd;background:#fff}.button--noColor:hover{color:#6680ae}.button--noColor:active{color:#6680ae;opacity:.5}.button--simple{height:auto;color:#34aadd;padding:5px;background:transparent}.button--simple__text{padding:5px}.button--simple:hover{color:#6680ae}.button--simple:active{color:#6680ae;opacity:.5}.button--color.button--disabled{background:#ebebf1}.button--noColor.button--disabled{background:#fff}.button--disabled{color:#bbc4d6;cursor:default}.button--disabled:hover{color:none}.button--iconed.button--tabIcon{display:block;height:100%;width:100%;padding:0;color:#bbc4d6;background-color:transparent}.button--iconed.button--tabIcon .button__icon--tab{margin:0 auto;height:100%;width:100%;background-color:transparent}.button--iconed.button--tabIcon:hover{color:#768298;transition:color .2s linear;transition:background-color .2s linear}.button__text{font-weight:500;display:block;margin-right:.625rem;margin-left:.625rem}.button__icon{height:.625rem;width:.625rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.button__icon--medium{height:1rem;width:1rem}.button__icon--gray{color:#768298}.icon{width:100%;height:100%;display:block}.heading{margin-top:0;margin-bottom:0;color:#121920}.heading--huge{font-size:30px;font-weight:500;line-height:130%}@media ((min-width:768px)){.heading--huge{font-size:36px}}.heading--large{font-size:30px;font-weight:500;line-height:130%}@media ((min-width:768px)){.heading--large{font-size:30px;line-height:120%}}.heading--medium{font-size:20px;font-weight:500;line-height:120%;color:#3c3c3c}@media ((min-width:768px)){.heading--medium{font-size:24px;line-height:130%}}.form__field-text{font-size:.75rem;color:#4b4b4b}.input{position:relative}.input--textarea .input__control{line-height:160%;height:6.25rem;padding:1.0625rem 1.25rem;resize:none;-ms-overflow-style:none;scrollbar-width:none}.input--textarea .input__control::-webkit-scrollbar{width:0;background:transparent}.input--small .input__control{height:40px}.input--buttoned .input__control{padding-left:3.0625rem}@media (min-width:768px){.input--buttoned .input__control{padding-left:2.4375rem}}.input--search .input__button{position:absolute;top:50%;left:1.25rem;transform:translateY(-50%)}@media (min-width:768px){.input--search .input__button{left:.625rem}}.input--search .input__control,.input__control{border:.0625rem solid #ebebf1}.input__control{font-size:14px;line-height:160%;display:block;width:100%;height:3.125rem;padding:0 1.25rem;transition:color .2s linear;border-radius:.3125rem;background-color:#fff;box-shadow:none}.input__control:-ms-input-placeholder{opacity:1}.input__control::placeholder{color:#bbc4d6;opacity:1;font-size:14px}.input__control:-ms-input-placeholder{color:#bbc4d6;font-size:14px}.input__control::-ms-input-placeholder{color:#bbc4d6;font-size:14px}.input__control:focus{border-color:#768298;outline:none}.input__control:disabled{background-color:#ebebf1}.input__control--error{border-color:#dc2c53;color:#dc2c53;font-size:.625rem}.input__control--error:focus{border-color:#dc2c53}.input__control-error{line-height:160%;color:transparent}.logo--small{width:93.42px;height:18.1px}@media (min-width:1440px){.logo--small{width:135.04px;height:30.32px}}.profile__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:right;justify-content:right}.profile__name{display:none}@media (min-width:768px){.profile__name{display:block;color:#768298;font-size:14px;line-height:120%;margin-right:.625rem}}.profile__avatar{display:none}@media (min-width:768px){.profile__avatar{display:block;width:40px;height:40px}}.profile__icon{display:block;width:40px;height:40px;background-color:#ebebf1;border-radius:50%;position:relative}@media (min-width:768px){.profile__icon{display:none}}.profile__icon-pic{width:80%;height:80%;position:absolute;bottom:5px;left:50%;transform:translateX(-50%)}.social__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media (min-width:768px){.social__list{-ms-flex-pack:left;justify-content:left}}.social__item{margin-bottom:0;margin-right:1.4375rem}.social__item:last-child{margin-right:0}.social__icon>.social__icon-pic{fill:#bbc4d6}.social__icon>.social__icon-pic:hover{fill:#768298;transition:fill .3s linear}.social__icon-pic{width:2.5rem;height:2.5rem}.menu__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.menu__list{-ms-flex-direction:row;flex-direction:row}}.menu__item{margin-bottom:1.25rem;color:#34aadd}.menu__item:last-child{margin-bottom:0}@media (min-width:768px){.menu__item{margin-right:1.875rem;margin-bottom:0;font-size:14px}.menu__item:last-child{margin-right:0}}.cards__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:1.25rem}@media (min-width:768px){.cards__list{margin-right:-.625rem;margin-left:-.625rem}}@media (min-width:1440px){.cards__list{margin-top:-1.875rem;margin-right:-1rem;margin-left:-1rem}}.cards__item{width:100%;margin-top:1.25rem}@media (min-width:768px){.cards__item{width:50%;padding-right:.625rem;padding-left:.625rem}}@media (min-width:1440px){.cards__item{width:33.33333%;margin-top:1.875rem;padding-right:1rem;padding-left:1rem}}@media (min-width:768px){.cards__item--big{width:100%}}@media (min-width:1440px){.cards__item--big{width:66.66667%}}.card{height:22rem;background-color:#fff;filter:drop-shadow(0 12px 40px rgba(0,0,0,.03)) drop-shadow(0 3px 10px rgba(164,164,164,.03));border-radius:8px}.card,.card__image{overflow:hidden;position:relative}.card__image{width:100%;margin-bottom:.625rem}.card__image:before{display:block;padding-top:47.46269%;content:""}@media (min-width:768px){.card__image:before{padding-top:44.91525%}}@media (min-width:1440px){.card__image:before{padding-top:40.56122%}}.card__image-pic{width:100%;height:100%;object-fit:cover;font-family:"object-fit: cover"}.card__box,.card__image-pic{position:absolute;top:0;right:0;bottom:0;left:0}.card__content{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;overflow:hidden;margin-right:1.25rem;margin-left:1.25rem}.card__content,.card__footer{display:-ms-flexbox;display:flex}.card__footer{height:4rem;background-color:#fff;color:#768298;font-size:.75rem;padding-top:20px;padding-right:1.25rem;padding-left:1.25rem;position:absolute;right:0;bottom:0;left:0;z-index:10;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.card__heading{margin:0 0 .625rem;font-size:1.125rem;font-weight:500;line-height:150%;height:100%}.card__text{color:#768298;margin:0;font-size:14px;line-height:150%;height:auto;overflow:hidden}.card--big .card__image{height:100%}.card--big .card__content{position:absolute;top:50%}.card--big .card__footer{background-color:transparent}.card__icon{position:absolute;top:0;right:0;width:2.1875rem;height:2.1875rem;padding:.375rem;background-color:#fff;color:red;stroke:#34aadd}.cards__item .card--big:before{content:"";position:absolute;top:0;width:100%;height:100%;background-color:#121920;opacity:.7;z-index:200}.breadcrumbs__list{-ms-flex-wrap:wrap;flex-wrap:wrap}.breadcrumbs__item,.breadcrumbs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.breadcrumbs__item{position:relative;padding:0 1.4375rem}.breadcrumbs__item:first-child{padding-left:0}.breadcrumbs__item:last-child{padding-right:0}.breadcrumbs__item--active .breadcrumbs__link{color:#768298}.breadcrumbs__item--active .breadcrumbs__link:after{display:none}.breadcrumbs__item--active .breadcrumbs__link:hover{text-decoration:none}.breadcrumbs__item:first-child .breadcrumbs__link:before{display:none}.breadcrumbs__link{font-size:14px;line-height:1.75rem;display:block;text-decoration:none;color:#bbc4d6}@media (min-width:768px){.breadcrumbs__link{font-size:1rem;line-height:2rem}}.breadcrumbs__link:hover{text-decoration:underline;color:#768298;transition:.3s ease-in-out}.breadcrumbs__link:after,.breadcrumbs__link:before{position:absolute;top:50%;width:.375rem;height:.625rem;transform:translateY(-50%);content:"";background-image:url(/soloveva_a_qschool/public/images/icons/arrow.svg);background-repeat:no-repeat}.breadcrumbs__link:before{left:0}.breadcrumbs__link:after{right:-.375rem}.actions{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.actions:last-child{margin-right:0}.actions__block{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-right:.75rem}.actions__item--icon{width:.8125rem;height:.75rem;margin-right:.375rem}.actions__item--number{font-size:.75rem}.tabs{transition:.3s ease-in-out}.tabs--blue .tabs__item{color:#34aadd;border-radius:.25rem;background-color:#ebebf1}.tabs--blue .tabs__item--active{color:#fff;background-color:#34aadd}.tabs--red .tabs__item{position:relative;margin-right:1.875rem;padding-right:0;padding-left:0;color:#bbc4d6}.tabs--red .tabs__item--active{color:#121920}.tabs--red .tabs__item--active:after{content:"";position:absolute;bottom:-21px;left:50%;transform:translateX(-50%);width:100%;height:4px;padding:.625rem 0;border-top:.25rem solid #dc2c53;border-radius:.25rem}.tabs--red .tabs__list{border-bottom:1px solid #bbc4d6}.tabs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.tabs__item{font-size:16px;font-weight:500;line-height:1.25rem;padding:.625rem 1.25rem;cursor:pointer}.tabs__item+.tabs__item{margin-left:1.25rem}.tabs__block{display:none}.tabs__block--active{display:block}
/*# sourceMappingURL=data:application/json;base64, */